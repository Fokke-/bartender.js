"use strict";class Bartender{constructor(t){"function"!=typeof window.CustomEvent&&(window.CustomEvent=function(t,e){e=e||{bubbles:!1,cancelable:!1,detail:null};var s=document.createEvent("CustomEvent");return s.initCustomEvent(t,e.bubbles,e.cancelable,e.detail),s}),this.options=Object.assign({debug:!1,overlay:!0,closeOnEsc:!0,trapFocus:!1,mainWrapSelector:".bartender-main",contentWrapSelector:".bartender-content",focusableElementSelector:'[href], button, input, textarea, select, details, [tabindex]:not([tabindex="-1"])',readyClass:"bartender-ready",openClass:"bartender-open"},t),this.overlay=null,this.currentOpenBar=null,this.previousOpenButton=null,this.resizeTimeout=null,this.bars={},this.openButtons=[],this.closeButtons=[],this.toggleButtons=[],this.pushElements=[],this.validBarPositions=["left","right","top","bottom"],this.validModes=["float","push","reveal"],this.init()}log(t=""){console.log("Bartender: "+t)}logError(t=""){console.error("Bartender: "+t)}debug(t=""){this.options.debug&&console.log("Bartender debug: "+t)}disableFocus(t){const e=performance.now(),s=t.querySelectorAll(this.options.focusableElementSelector);for(let t=0;t<s.length;t++)s[t].setAttribute("data-bartender-prevtabindex",s[t].getAttribute("tabindex")),s[t].setAttribute("tabindex","-1");t.setAttribute("tabindex","-1"),t.setAttribute("aria-hidden","true");const i=performance.now();return this.debug("Disabled focus of "+s.length+" elements in "+(i-e)),t}enableFocus(t){const e=performance.now(),s=t.querySelectorAll("[data-bartender-prevtabindex]");for(let t=0;t<s.length;t++)"null"!=s[t].getAttribute("data-bartender-prevtabindex")?s[t].setAttribute("tabindex",s[t].getAttribute("data-bartender-prevtabindex")):s[t].removeAttribute("tabindex"),s[t].removeAttribute("data-bartender-prevtabindex");t.setAttribute("tabindex","0"),t.removeAttribute("aria-hidden");const i=performance.now();return this.debug("Enabled focus of "+s.length+" elements in "+(i-e)),t}isValidPosition(t=null){return this.validBarPositions.indexOf(t)>=0}init(){try{if(this.mainWrap=document.querySelector(this.options.mainWrapSelector),!this.mainWrap)throw"Main wrap element was not found with selector: "+this.options.mainWrapSelector;if(this.contentWrap=this.mainWrap.querySelector(this.options.contentWrapSelector),!this.contentWrap)throw"Content wrap element was not found with selector: "+this.options.contentWrapSelector;this.openButtons=this.mainWrap.querySelectorAll("[data-bartender-open]"),this.closeButtons=this.mainWrap.querySelectorAll("[data-bartender-close]"),this.toggleButtons=this.mainWrap.querySelectorAll("[data-bartender-toggle]"),this.mainWrap.classList.add("bartender-main"),this.contentWrap.classList.add("bartender-content");const t=this.mainWrap.querySelectorAll("[data-bartender-bar]");for(let e=0;e<t.length;e++)this.addBar(t[e]);for(let t=0;t<this.openButtons.length;t++){let e=this.openButtons[t],s=e.getAttribute("data-bartender-open");if(!this.isValidPosition(s))return void this.logError("Open button has invalid bar position '"+s+"' defined. Use one of the following values: "+this.validBarPositions.join(", "));e.setAttribute("aria-expanded","false"),e.addEventListener("click",(()=>{this.open(s,e)}))}for(let t=0;t<this.toggleButtons.length;t++){let e=this.toggleButtons[t],s=e.getAttribute("data-bartender-toggle");if(!this.isValidPosition(s))return void this.logError("Toggle button has invalid bar position '"+s+"' defined. Use one of the following values: "+this.validBarPositions.join(", "));e.setAttribute("aria-expanded","false"),e.addEventListener("click",(()=>{this.toggle(s,e)}))}for(let t=0;t<this.closeButtons.length;t++){this.closeButtons[t].addEventListener("click",(()=>{this.close()}))}this.pushElements=this.mainWrap.querySelectorAll("[data-bartender-push]"),this.pushElements.length&&this.debug("Registered "+this.pushElements.length+" pushable elements."),this.options.overlay&&!this.overlay&&(this.overlay=document.createElement("div"),this.overlay.classList.add("bartender-overlay"),this.overlay.addEventListener("click",(()=>this.close())),this.contentWrap.appendChild(this.overlay)),this.options.closeOnEsc&&window.addEventListener("keydown",(t=>{let e=t.key||t.keyCode;"Escape"!==e&&"Esc"!==e&&27!==e||this.close()})),window.addEventListener("resize",(()=>{clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout((()=>{this.setPush()}),200)})),this.mainWrap.classList.add(this.options.readyClass)}catch(t){this.logError(t)}return this}addBar(t){try{let e=t.getAttribute("data-bartender-bar"),s=t.getAttribute("data-bartender-bar-mode");if(s||(s="float",t.setAttribute("data-bartender-bar-mode",s)),!this.isValidPosition(e))throw"Invalid bar position '"+e+"'. Use one of the following values: "+this.validBarPositions.join(", ");if(this.validModes.indexOf(s)<0)throw"Invalid mode '"+s+"' for bar '"+e+"'. Use one of the following values: "+this.validModes.join(", ");if(this.bars[e])throw"Bar with position '"+e+"' is already defined";const i={element:t,position:e,mode:s};this.bars[e]=i,this.disableFocus(i.element),this.debug("Added bar '"+e+"' with mode '"+s+"'")}catch(t){this.logError(t)}return t}open(t="",e=null){try{if(!this.isValidPosition(t))throw"Invalid bar position '"+t+"'. Use one of the following values: "+this.validBarPositions.join(", ");const s=this.bars[t];if(!s)throw"Bar with position '"+t+"' is not defined.";return this.currentOpenBar?this.close(!1):!0===this.options.trapFocus&&this.disableFocus(this.contentWrap),this.debug("Opening bar '"+t+"'"),this.currentOpenBar=s,s.element.classList.add("bartender-bar--open"),this.enableFocus(s.element),s.element.focus(),this.setPush(),this.previousOpenButton=e,e&&e.setAttribute("aria-expanded",!0),this.showOverlay(),this.mainWrap.classList.add(this.options.openClass),this.mainWrap.dispatchEvent(new CustomEvent("bartender-open",{bubbles:!0,detail:{bar:s,button:e}})),s}catch(t){this.logError(t)}}toggle(t=null,e=null){try{if(!this.isValidPosition(t))throw"Invalid bar position '"+t+"'. Use one of the following values: "+this.validBarPositions.join(", ");return this.currentOpenBar&&this.currentOpenBar.position==t?this.close():(this.close(),this.open(t,e))}catch(t){this.logError(t)}}close(t=!0){try{if(!this.currentOpenBar)return;let e=this.bars[this.currentOpenBar.position];this.debug("Closing bar '"+e.position+"'"),this.mainWrap.dispatchEvent(new CustomEvent("bartender-close",{bubbles:!0,detail:{bar:e}})),this.hideOverlay(),this.contentWrap.style.removeProperty("transform");for(let t=0;t<this.pushElements.length;t++)this.pushElements[t].style.removeProperty("transform");return this.disableFocus(e.element),!0===this.options.trapFocus&&!0===t&&this.enableFocus(this.contentWrap),e.element.classList.remove("bartender-bar--open"),this.currentOpenBar=null,this.mainWrap.style.removeProperty("overflow"),this.mainWrap.classList.remove(this.options.openClass),this.previousOpenButton&&this.previousOpenButton.getAttribute("tabindex")>=0?(this.previousOpenButton.focus(),this.previousOpenButton.setAttribute("aria-expanded","false"),this.previousOpenButton=null):!0===t&&this.contentWrap.focus(),e}catch(t){this.logError(t)}}setPush(){if(!this.currentOpenBar||!this.currentOpenBar.mode)return;let t=null;switch(this.mainWrap.style.overflow="hidden",this.currentOpenBar.position){case"left":t="translateX("+this.currentOpenBar.element.offsetWidth+"px)";break;case"right":t="translateX(-"+this.currentOpenBar.element.offsetWidth+"px)";break;case"top":t="translateY("+this.currentOpenBar.element.offsetHeight+"px)";break;case"bottom":t="translateY(-"+this.currentOpenBar.element.offsetHeight+"px)"}["push","reveal"].indexOf(this.currentOpenBar.mode)>=0&&(this.contentWrap.style.transform=t);for(let e=0;e<this.pushElements.length;e++)this.pushElements[e].style.transform=t}showOverlay(){this.overlay&&(this.overlay.classList.contains("bartender-overlay--visible")||this.overlay.classList.add("bartender-overlay--visible"))}hideOverlay(){this.overlay&&this.overlay.classList.contains("bartender-overlay--visible")&&this.overlay.classList.remove("bartender-overlay--visible")}}
//# sourceMappingURL=bartender.min.js.map
