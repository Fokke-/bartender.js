"use strict";class Bartender{constructor(t){this.options=Object.assign({debug:!1,overlay:!0,closeOnEsc:!0,mainWrapSelector:".bartender-main",contentWrapSelector:".bartender-content",focusableElementSelector:'a, button, input, textarea, select, details, [tabindex]:not([tabindex="-1"])',readyClass:"bartender-ready",openClass:"bartender-open"},t),this.overlay=null,this.currentOpenBar=null,this.previousOpenButton=null,this.resizeTimeout=null,this.bars={},this.openButtons=[],this.closeButtons=[],this.toggleButtons=[],this.pushElements=[],this.validBarPositions=["left","right","top","bottom"],this.init()}log(t=""){console.log("Bartender: "+t)}logError(t=""){console.error("Bartender: "+t)}debug(t=""){this.options.debug&&console.log("Bartender debug: "+t)}disableFocus(t){return t.querySelectorAll(this.options.focusableElementSelector).forEach((t=>{t.setAttribute("data-bartender-prevtabindex",t.getAttribute("tabindex")),t.setAttribute("tabindex","-1")})),t.setAttribute("tabindex","-1"),t.setAttribute("aria-hidden","true"),t}enableFocus(t){return t.querySelectorAll("[data-bartender-prevtabindex").forEach((t=>{"null"!=t.getAttribute("data-bartender-prevtabindex")?t.setAttribute("tabindex",t.getAttribute("data-bartender-prevtabindex")):t.removeAttribute("tabindex"),t.removeAttribute("data-bartender-prevtabindex")})),t.setAttribute("tabindex","0"),t.removeAttribute("aria-hidden"),t}init(){try{if(this.mainWrap=document.querySelector(this.options.mainWrapSelector),!this.mainWrap)throw"Main wrap element was not found with selector: "+this.options.mainWrapSelector;if(this.contentWrap=this.mainWrap.querySelector(this.options.contentWrapSelector),!this.contentWrap)throw"Content wrap element was not found with selector: "+this.options.contentWrapSelector;if(this.openButtons=this.mainWrap.querySelectorAll("[data-bartender-open]"),this.closeButtons=this.mainWrap.querySelectorAll("[data-bartender-close]"),this.toggleButtons=this.mainWrap.querySelectorAll("[data-bartender-toggle]"),this.mainWrap.classList.add("bartender-main"),this.contentWrap.classList.add("bartender-content"),this.mainWrap.querySelectorAll("[data-bartender-bar]").forEach((t=>{this.addBar(t)})),!Object.keys(this.bars).length)throw"Cannot find any bars.";this.openButtons.forEach((t=>{let e=t.getAttribute("data-bartender-open");this.isValidPosition(e)?(t.setAttribute("aria-expanded","false"),t.addEventListener("click",(()=>{this.open(e,t)}))):this.logError("Open button has invalid bar position '"+e+"' defined. Use one of the following values: "+this.validBarPositions.join(", "))})),this.toggleButtons.forEach((t=>{let e=t.getAttribute("data-bartender-toggle");this.isValidPosition(e)?(t.setAttribute("aria-expanded","false"),t.addEventListener("click",(()=>{this.toggle(e,t)}))):this.logError("Toggle button has invalid bar position '"+e+"' defined. Use one of the following values: "+this.validBarPositions.join(", "))})),this.closeButtons.forEach((t=>{t.addEventListener("click",(()=>{this.close()}))})),this.pushElements=this.mainWrap.querySelectorAll("[data-bartender-push]"),this.pushElements.length&&this.debug("Registered "+this.pushElements.length+" pushable elements."),this.options.overlay&&!this.overlay&&(this.overlay=document.createElement("div"),this.overlay.classList.add("bartender-overlay"),this.overlay.addEventListener("click",(()=>this.close())),this.contentWrap.appendChild(this.overlay)),this.options.closeOnEsc&&window.addEventListener("keydown",(t=>{27===t.keyCode&&this.close()})),window.addEventListener("resize",(()=>{clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout((()=>{this.setPush()}),200)})),this.mainWrap.classList.add(this.options.readyClass)}catch(t){this.logError(t)}return this}isValidPosition(t=null){return this.validBarPositions.indexOf(t)>=0}addBar(t){try{let e=t.getAttribute("data-bartender-bar");if(!this.mainWrap||!this.contentWrap)return this;if(!this.isValidPosition(e))throw"Invalid bar position '"+e+"'. Use one of the following values: "+this.validBarPositions.join(", ");if(this.bars[e])throw"Bar with position '"+e+"' is already defined";const i=new BartenderBar;i.element=t,i.init(),this.disableFocus(i.element),this.bars[e]=i,this.debug("Added bar '"+e+"' with mode '"+i.mode+"'")}catch(t){this.logError(t)}return t}async open(t="",e=null){try{if(!this.isValidPosition(t))throw"Invalid bar position '"+t+"'. Use one of the following values: "+this.validBarPositions.join(", ");const i=this.bars[t];if(!i)throw"Bar with position '"+t+"' is not defined. Use one of the following: "+Object.keys(this.bars).join(", ")+".";return await this.close(),this.debug("Opening bar '"+t+"'"),i.element.addEventListener("transitionend",(()=>{null!==this.currentOpenBar&&this.currentOpenBar.position===i.position&&(this.debug("Opening bar '"+i.position+"' was finished"),this.mainWrap.dispatchEvent(new CustomEvent("bartender-afterOpen",{bubbles:!0,detail:{bar:i,button:e}})))}),{once:!0}),this.disableFocus(this.contentWrap),this.enableFocus(i.element),i.element.focus(),this.currentOpenBar=i,i.element.classList.add("bartender-bar--open"),this.setPush(),this.mainWrap.classList.add(this.options.openClass),this.previousOpenButton=e,e&&e.setAttribute("aria-expanded",!0),this.showOverlay(),this.mainWrap.dispatchEvent(new CustomEvent("bartender-open",{bubbles:!0,detail:{bar:i,button:e}})),i}catch(t){this.logError(t)}}async toggle(t=null,e=null){try{if(!this.isValidPosition(t))throw"Invalid bar position '"+t+"'. Use one of the following values: "+this.validBarPositions.join(", ");return this.currentOpenBar&&this.currentOpenBar.position==t?this.close():(await this.close(),this.open(t,e))}catch(t){this.logError(t)}}close(){return new Promise(((t,e)=>{try{if(!this.currentOpenBar)return t();let e=this.bars[this.currentOpenBar.position];this.debug("Closing bar '"+e.position+"'"),this.mainWrap.dispatchEvent(new CustomEvent("bartender-close",{bubbles:!0,detail:{bar:e}})),this.hideOverlay(),this.contentWrap.style.removeProperty("transform"),this.pushElements.forEach((t=>{t.style.removeProperty("transform")})),this.disableFocus(e.element),this.enableFocus(this.contentWrap),e.element.addEventListener("transitionend",(()=>{this.mainWrap.dispatchEvent(new CustomEvent("bartender-afterClose",{bubbles:!0,detail:{bar:e}})),this.mainWrap.style.removeProperty("overflow"),this.mainWrap.classList.remove(this.options.openClass),this.previousOpenButton?(this.previousOpenButton.focus(),this.previousOpenButton.setAttribute("aria-expanded","false"),this.previousOpenButton=null):this.contentWrap.focus(),setTimeout((()=>(this.debug("Closing bar '"+e.position+"' was finished"),t(e))),200)}),{once:!0}),e.element.classList.remove("bartender-bar--open"),this.currentOpenBar=null}catch(t){return this.logError(t),e(t)}}))}setPush(){if(!this.currentOpenBar||!this.currentOpenBar.mode)return;let t=null;switch(this.mainWrap.style.overflow="hidden",this.currentOpenBar.position){case"left":t="translateX("+this.currentOpenBar.element.offsetWidth+"px)";break;case"right":t="translateX(-"+this.currentOpenBar.element.offsetWidth+"px)";break;case"top":t="translateY("+this.currentOpenBar.element.offsetHeight+"px)";break;case"bottom":t="translateY(-"+this.currentOpenBar.element.offsetHeight+"px)"}["push","reveal"].indexOf(this.currentOpenBar.mode)>=0&&(this.contentWrap.style.transform=t),this.pushElements.forEach((e=>{e.style.transform=t}))}showOverlay(){this.overlay&&(this.overlay.classList.contains("bartender-overlay--visible")||this.overlay.classList.add("bartender-overlay--visible"))}hideOverlay(){this.overlay&&this.overlay.classList.contains("bartender-overlay--visible")&&this.overlay.classList.remove("bartender-overlay--visible")}}class BartenderBar{constructor(){this.element=null,this.position=null,this.mode="float",this.validModes=["float","push","reveal"]}init(){if(!this.element)throw"Bar element for '"+this.position+"' was not found!";if(this.position=this.element.getAttribute("data-bartender-bar"),!this.position)throw"Missing position for bar";if(this.element.getAttribute("data-bartender-bar-mode")&&(this.mode=this.element.getAttribute("data-bartender-bar-mode")),this.validModes.indexOf(this.mode)<0)throw"Invalid mode '"+this.mode+"' for bar '"+this.position+"'. Use one of the following values: "+this.validModes.join(", ");return this}}
//# sourceMappingURL=bartender.min.js.map
