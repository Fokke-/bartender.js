{"version":3,"sources":["offcanvas.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","OffCanvas","options","debug","overlay","closeOnEsc","mainWrapSelector","contentWrapSelector","toggleButtonSelector","currentOpenBar","previousOpenButton","resizeTimeout","bars","left","right","top","bottom","init","value","text","undefined","console","log","error","button","_this","mainWrap","document","querySelector","contentWrap","openButtons","querySelectorAll","closeButtons","toggleButtons","classList","add","_a","_f","position","getAttribute","isValidPosition","addEventListener","openBar","event","indexOf","keyCode","preventDefault","logError","_i","_a2","_i2","closeBar","createElement","appendChild","window","clearTimeout","setTimeout","setContentWrapPush","newBar","OffCanvasBar","parentElement","bar","element","contains","open","showOverlay","close","focus","style","removeProperty","hideOverlay","mode","overflow","transform","offsetWidth","offsetHeight","remove","selector","focusableElementSelector","isValidMode","setAttribute","disableFocus","_a3","_i3","_a4","_i4","removeAttribute","enableFocus"],"mappings":"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","file":"offcanvas.js","sourcesContent":["'use strict';\n\nclass OffCanvas {\n\n  constructor (options) {\n    // Apply user configuration\n    this.options = Object.assign({\n      debug: false, // Debug mode\n      overlay: true, // Show shading overlay over content wrapper when bar is open?\n      closeOnEsc: true, // Close open bar with escape key?\n      mainWrapSelector: '.offcanvas-main',\n      contentWrapSelector: '.offcanvas-content',\n      toggleButtonSelector: '.offcanvas-toggle',\n    }, options)\n\n    this.overlay = null\n    this.currentOpenBar = null\n    this.previousOpenButton = null\n    this.resizeTimeout = null\n    this.bars = {\n      left: null,\n      right: null,\n      top: null,\n      bottom: null,\n    }\n\n    this.init()\n  }\n\n  // Logging function\n  log (text = '') {\n    console.log('Off-canvas: ' + text)\n  }\n\n  // Error logging function\n  logError (text = '') {\n    console.error('Off-canvas: ' + text)\n  }\n\n  // Debug logging function\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Off-canvas debug: ' + text)\n  }\n\n  init () {\n    try {\n      // Find and validate required elements\n      this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n\n      this.contentWrap = this.mainWrap.querySelector(this.options.contentWrapSelector)\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n\n      // Find all buttons\n      this.openButtons = this.mainWrap.querySelectorAll('[data-offcanvas-open]')\n      this.closeButtons = this.mainWrap.querySelectorAll('[data-offcanvas-close]')\n      this.toggleButtons = this.mainWrap.querySelectorAll(this.options.toggleButtonSelector)\n\n      // Add classes\n      this.mainWrap.classList.add('offcanvas-main')\n      this.contentWrap.classList.add('offcanvas-content')\n\n      // Add event listeners for open buttons\n      this.openButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-open')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.openBar(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.openBar(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for close buttons\n      this.closeButtons.forEach(button => {\n        button.addEventListener('click', () => this.closeBar())\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.closeBar()\n          }\n        })\n      })\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('offcanvas-overlay')\n        this.overlay.addEventListener('click', () => this.closeBar())\n        this.overlay.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.closeBar()\n          }\n        })\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      // Enable closing the bar with escape key\n      if (this.options.closeOnEsc) {\n        window.addEventListener('keydown', event => {\n          if (event.keyCode === 27) {\n            event.preventDefault()\n            this.closeBar()\n          }\n        })\n      }\n\n      // Adjust content wrapper transform when window is resized\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeTimeout)\n\n        this.resizeTimeout = setTimeout(() => {\n          this.setContentWrapPush()\n        }, 200)\n      })\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  isValidPosition (position = null) {\n    return ['left', 'right', 'top', 'bottom'].indexOf(position) >= 0\n  }\n\n  addBar (position = 'left', options = {}) {\n    try {\n      // Validate required elements\n      if (!this.mainWrap || !this.contentWrap) return this\n\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      // Check that bar is not already defined\n      if (this.bars[position]) throw 'Bar with position \\'' + position + '\\' is already defined'\n\n      // Create new bar object\n      const newBar = new OffCanvasBar(options)\n      newBar.parentElement = this.mainWrap\n      newBar.position = position\n      newBar.init()\n\n      // Insert new bar\n      this.bars[position] = newBar\n\n      this.debug('Added bar with position \\'' + position + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  openBar (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined'\n      if (bar.element.classList.contains('offcanvas-bar--open')) return\n\n      // Close other bars\n      this.closeBar()\n\n      // Open bar\n      this.debug('Opening bar \\'' + position + '\\'')\n      bar.open()\n\n      // Mark this bar as open\n      this.currentOpenBar = bar\n\n      // Push content wrap if needed\n      this.setContentWrapPush()\n\n      // Remember the button which was used to open off-canvas\n      this.previousOpenButton = button\n\n      // Show overlay\n      this.showOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  closeBar () {\n    try {\n      if (!this.currentOpenBar) return\n\n      this.debug('Closing bar \\'' + this.currentOpenBar.position + '\\'')\n\n      this.currentOpenBar.close()\n\n      // Focus open button which was used to open the bar\n      if (this.previousOpenButton) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton = null\n      }\n\n      this.currentOpenBar = null\n      this.contentWrap.style.removeProperty('transform')\n      this.mainWrap.style.removeProperty('overflow')\n\n      this.hideOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  setContentWrapPush () {\n    if (!this.currentOpenBar) return\n    if (!this.currentOpenBar.options.mode) return\n\n    this.mainWrap.style.overflow = 'hidden'\n\n    if (['push', 'slide'].indexOf(this.currentOpenBar.options.mode) >= 0) {\n      switch (this.currentOpenBar.position) {\n        case 'left':\n          this.contentWrap.style.transform = 'translateX(' + this.currentOpenBar.element.offsetWidth + 'px)'\n          break\n\n        case 'right':\n          this.contentWrap.style.transform = 'translateX(-' + this.currentOpenBar.element.offsetWidth + 'px)'\n          break\n\n        case 'top':\n          this.contentWrap.style.transform = 'translateY(' + this.currentOpenBar.element.offsetHeight + 'px)'\n          break\n\n        case 'bottom':\n          this.contentWrap.style.transform = 'translateY(-' + this.currentOpenBar.element.offsetHeight + 'px)'\n          break\n      }\n    }\n  }\n\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Showing overlay')\n\n    this.overlay.classList.add('offcanvas-overlay--visible')\n  }\n\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Hiding overlay')\n\n    this.overlay.classList.remove('offcanvas-overlay--visible')\n  }\n}\n\nclass OffCanvasBar {\n\n  constructor(options) {\n    this.options = Object.assign({\n      selector: '',\n      focusableElementSelector: 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n      mode: 'float',\n    }, options)\n\n    this.parentElement = null\n    this.element = null\n    this.position = null\n  }\n\n  isValidMode(mode = '') {\n    return ['float', 'push', 'slide'].indexOf(mode) >= 0\n  }\n\n  init () {\n    // Validate required properties\n    if (!this.position) throw 'Missing position for bar'\n    if (!this.parentElement) throw 'Missing parent element for bar \\'' + this.position + '\\''\n\n    // If selector is not specified, use default\n    if (!this.options.selector) this.options.selector = '.offcanvas-bar--' + this.position\n\n    // Check that defined bar element exists\n    this.element = this.parentElement.querySelector(this.options.selector)\n    if (!this.element) throw 'Bar element was not found with selector: ' + this.options.selector\n\n    // Validate mode\n    if (!this.isValidMode(this.options.mode)) throw 'Invalid mode \\'' + this.options.mode + '\\' for bar \\'' + this.position + '\\'. Use one of the following values: float, push, slide.'\n\n    // Insert attributes\n    this.element.classList.add('offcanvas-bar')\n    this.element.setAttribute('data-offcanvas-bar-position', this.position)\n\n    // Disable focus\n    this.disableFocus()\n\n    return this\n  }\n\n  disableFocus () {\n    // Prevent focus on bar child elements\n    this.element.querySelectorAll(this.options.focusableElementSelector).forEach(item => {\n      item.setAttribute('tabindex', '-1')\n    })\n\n    // Prevent focus on bar\n    this.element.setAttribute('tabindex', '-1')\n    this.element.setAttribute('aria-hidden', 'true')\n  }\n\n  enableFocus () {\n    // Enable focus on bar child elements\n    this.element.querySelectorAll(this.options.focusableElementSelector).forEach(item => {\n      item.removeAttribute('tabindex')\n    })\n\n    // Focus on bar\n    this.element.removeAttribute('aria-hidden')\n    this.element.setAttribute('tabindex', '0')\n    this.element.focus()\n  }\n\n  open () {\n    this.enableFocus()\n    this.element.classList.add('offcanvas-bar--open')\n  }\n\n  close () {\n    this.disableFocus()\n    this.element.classList.remove('offcanvas-bar--open')\n  }\n\n}"]}