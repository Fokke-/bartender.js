{"version":3,"sources":["offcanvas.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","OffCanvas","options","debug","overlay","closeOnEsc","mainWrapSelector","contentWrapSelector","currentOpenBar","previousOpenButton","resizeTimeout","bars","init","value","text","undefined","console","log","error","button","bar","_this","mainWrap","document","querySelector","contentWrap","_a","querySelectorAll","_i","addBar","openButtons","closeButtons","toggleButtons","classList","add","_a2","_f2","position","getAttribute","isValidPosition","addEventListener","open","event","indexOf","keyCode","preventDefault","logError","_i2","_a3","_f3","toggle","_i3","_a4","_i4","close","createElement","appendChild","window","clearTimeout","setTimeout","setContentWrapPush","mode","newBar","OffCanvasBar","element","parentElement","contains","showOverlay","focus","style","removeProperty","hideOverlay","overflow","transform","offsetWidth","offsetHeight","remove","focusableElementSelector","disableFocus","_a5","_i5","setAttribute","_a6","_i6","removeAttribute","enableFocus"],"mappings":"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","file":"offcanvas.js","sourcesContent":["'use strict';\n\nclass OffCanvas {\n\n  constructor (options) {\n    // Apply user configuration\n    this.options = Object.assign({\n      debug: false, // Debug mode\n      overlay: true, // Show shading overlay over content wrapper when bar is open?\n      closeOnEsc: true, // Close open bar with escape key?\n      mainWrapSelector: '.offcanvas-main',\n      contentWrapSelector: '.offcanvas-content',\n    }, options)\n\n    this.overlay = null\n    this.currentOpenBar = null\n    this.previousOpenButton = null\n    this.resizeTimeout = null\n    this.bars = []\n    // this.bars = {\n    //   left: null,\n    //   right: null,\n    //   top: null,\n    //   bottom: null,\n    // }\n\n    this.init()\n  }\n\n  // Logging function\n  log (text = '') {\n    console.log('Off-canvas: ' + text)\n  }\n\n  // Error logging function\n  logError (text = '') {\n    console.error('Off-canvas: ' + text)\n  }\n\n  // Debug logging function\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Off-canvas debug: ' + text)\n  }\n\n  init () {\n    try {\n      // Find and validate required elements\n      this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n\n      this.contentWrap = this.mainWrap.querySelector(this.options.contentWrapSelector)\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n\n      // Find bars\n      this.mainWrap.querySelectorAll('[data-offcanvas-bar]').forEach(bar => {\n        this.addBar(bar)\n      })\n\n      // Find buttons\n      this.openButtons = this.mainWrap.querySelectorAll('[data-offcanvas-open]')\n      this.closeButtons = this.mainWrap.querySelectorAll('[data-offcanvas-close]')\n      this.toggleButtons = this.mainWrap.querySelectorAll('[data-offcanvas-toggle]')\n\n      // Add classes\n      this.mainWrap.classList.add('offcanvas-main')\n      this.contentWrap.classList.add('offcanvas-content')\n\n      // Add event listeners for open buttons\n      this.openButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-open')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.open(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.open(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for toggle buttons\n      this.toggleButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-toggle')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Toggle button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.toggle(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.toggle(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for close buttons\n      this.closeButtons.forEach(button => {\n        button.addEventListener('click', () => this.close())\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      })\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('offcanvas-overlay')\n        this.overlay.addEventListener('click', () => this.close())\n        this.overlay.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      // Enable closing the bar with escape key\n      if (this.options.closeOnEsc) {\n        window.addEventListener('keydown', event => {\n          if (event.keyCode === 27) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      }\n\n      // Adjust content wrapper transform when window is resized\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeTimeout)\n\n        this.resizeTimeout = setTimeout(() => {\n          this.setContentWrapPush()\n        }, 200)\n      })\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  isValidPosition (position = null) {\n    return ['left', 'right', 'top', 'bottom'].indexOf(position) >= 0\n  }\n\n  addBar (bar) {\n    try {\n      // Get bar configuration\n      var position = bar.getAttribute('data-offcanvas-bar')\n      var mode = bar.getAttribute('data-offcanvas-bar-mode')\n\n      // Validate required elements\n      if (!this.mainWrap || !this.contentWrap) return this\n\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      // Check that bar is not already defined\n      if (this.bars[position]) throw 'Duplicate bar with position \\'' + position + '\\''\n\n      // Create new bar object\n      const newBar = new OffCanvasBar()\n      newBar.element = bar\n      newBar.parentElement = this.mainWrap\n      newBar.position = position\n      if (mode) newBar.mode = mode\n      newBar.init()\n\n      // Insert new bar\n      this.bars[position] = newBar\n\n      this.debug('Added bar \\'' + newBar.position + '\\' with mode \\'' + newBar.mode + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  open (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined'\n      if (bar.element.classList.contains('offcanvas-bar--open')) return\n\n      // Close other bars\n      this.close()\n\n      // Open bar\n      this.debug('Opening bar \\'' + position + '\\'')\n      bar.open()\n\n      // Mark this bar as open\n      this.currentOpenBar = bar\n\n      // Push content wrap if needed\n      this.setContentWrapPush()\n\n      // Remember the button which was used to open off-canvas\n      this.previousOpenButton = button\n\n      // Show overlay\n      this.showOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  toggle (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      if (this.currentOpenBar && this.currentOpenBar.position == position) {\n        this.close()\n      } else {\n        this.close()\n        this.open(position, button)\n      }\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  close () {\n    try {\n      if (!this.currentOpenBar) return\n\n      this.debug('Closing bar \\'' + this.currentOpenBar.position + '\\'')\n\n      this.currentOpenBar.close()\n\n      // Focus open button which was used to open the bar\n      if (this.previousOpenButton) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton = null\n      }\n\n      this.currentOpenBar = null\n      this.contentWrap.style.removeProperty('transform')\n      this.mainWrap.style.removeProperty('overflow')\n\n      this.hideOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  setContentWrapPush () {\n    if (!this.currentOpenBar) return\n    if (!this.currentOpenBar.mode) return\n\n    this.mainWrap.style.overflow = 'hidden'\n\n    if (['push', 'slide'].indexOf(this.currentOpenBar.mode) >= 0) {\n      switch (this.currentOpenBar.position) {\n        case 'left':\n          this.contentWrap.style.transform = 'translateX(' + this.currentOpenBar.element.offsetWidth + 'px)'\n          break\n\n        case 'right':\n          this.contentWrap.style.transform = 'translateX(-' + this.currentOpenBar.element.offsetWidth + 'px)'\n          break\n\n        case 'top':\n          this.contentWrap.style.transform = 'translateY(' + this.currentOpenBar.element.offsetHeight + 'px)'\n          break\n\n        case 'bottom':\n          this.contentWrap.style.transform = 'translateY(-' + this.currentOpenBar.element.offsetHeight + 'px)'\n          break\n      }\n    }\n  }\n\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Showing overlay')\n\n    this.overlay.classList.add('offcanvas-overlay--visible')\n  }\n\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Hiding overlay')\n\n    this.overlay.classList.remove('offcanvas-overlay--visible')\n  }\n}\n\nclass OffCanvasBar {\n\n  constructor() {\n    this.parentElement = null\n    this.element = null\n    this.position = null\n    this.mode = 'float'\n    this.focusableElementSelector = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n  }\n\n  init () {\n    // Validate required properties\n    if (!this.position) throw 'Missing position for bar'\n    if (!this.parentElement) throw 'Missing parent element for bar \\'' + this.position + '\\''\n\n    // Check that defined bar element exists\n    if (!this.element) throw 'Bar element for \\'' + this.position + '\\' was not found!'\n\n    // Validate mode\n    if (['float', 'push', 'slide'].indexOf(this.mode) < 0) throw 'Invalid mode \\'' + this.mode + '\\' for bar \\'' + this.position + '\\'. Use one of the following values: float, push, slide.'\n\n    // Disable focus\n    this.disableFocus()\n\n    return this\n  }\n\n  disableFocus () {\n    // Prevent focus on bar child elements\n    this.element.querySelectorAll(this.focusableElementSelector).forEach(item => {\n      item.setAttribute('tabindex', '-1')\n    })\n\n    // Prevent focus on bar\n    this.element.setAttribute('tabindex', '-1')\n    this.element.setAttribute('aria-hidden', 'true')\n\n    return this\n  }\n\n  enableFocus () {\n    // Enable focus on bar child elements\n    this.element.querySelectorAll(this.focusableElementSelector).forEach(item => {\n      item.removeAttribute('tabindex')\n    })\n\n    // Focus on bar\n    this.element.removeAttribute('aria-hidden')\n    this.element.setAttribute('tabindex', '0')\n    this.element.focus()\n\n    return this\n  }\n\n  open () {\n    this.enableFocus()\n    this.element.classList.add('offcanvas-bar--open')\n\n    return this\n  }\n\n  close () {\n    this.disableFocus()\n    this.element.classList.remove('offcanvas-bar--open')\n\n    return this\n  }\n\n}"]}