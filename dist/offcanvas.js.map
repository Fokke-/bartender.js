{"version":3,"sources":["offcanvas.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","OffCanvas","options","debug","overlay","closeOnEsc","mainWrapSelector","contentWrapSelector","currentOpenBar","previousOpenButton","resizeTimeout","bars","left","right","top","bottom","init","value","text","undefined","console","log","error","button","_this","mainWrap","document","querySelector","contentWrap","openButtons","querySelectorAll","closeButtons","toggleButtons","classList","add","_a","_f","position","getAttribute","isValidPosition","addEventListener","open","event","indexOf","keyCode","preventDefault","logError","_i","_a2","_f2","toggle","_i2","_a3","_i3","close","createElement","appendChild","window","clearTimeout","setTimeout","setContentWrapPush","newBar","OffCanvasBar","parentElement","bar","element","contains","showOverlay","focus","style","removeProperty","hideOverlay","mode","overflow","transform","offsetWidth","offsetHeight","remove","selector","focusableElementSelector","isValidMode","setAttribute","disableFocus","_a4","_i4","_a5","_i5","removeAttribute","enableFocus"],"mappings":"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","file":"offcanvas.js","sourcesContent":["'use strict';\n\nclass OffCanvas {\n\n  constructor (options) {\n    // Apply user configuration\n    this.options = Object.assign({\n      debug: false, // Debug mode\n      overlay: true, // Show shading overlay over content wrapper when bar is open?\n      closeOnEsc: true, // Close open bar with escape key?\n      mainWrapSelector: '.offcanvas-main',\n      contentWrapSelector: '.offcanvas-content',\n    }, options)\n\n    this.overlay = null\n    this.currentOpenBar = null\n    this.previousOpenButton = null\n    this.resizeTimeout = null\n    this.bars = {\n      left: null,\n      right: null,\n      top: null,\n      bottom: null,\n    }\n\n    this.init()\n  }\n\n  // Logging function\n  log (text = '') {\n    console.log('Off-canvas: ' + text)\n  }\n\n  // Error logging function\n  logError (text = '') {\n    console.error('Off-canvas: ' + text)\n  }\n\n  // Debug logging function\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Off-canvas debug: ' + text)\n  }\n\n  init () {\n    try {\n      // Find and validate required elements\n      this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n\n      this.contentWrap = this.mainWrap.querySelector(this.options.contentWrapSelector)\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n\n      // Find all buttons\n      this.openButtons = this.mainWrap.querySelectorAll('[data-offcanvas-open]')\n      this.closeButtons = this.mainWrap.querySelectorAll('[data-offcanvas-close]')\n      this.toggleButtons = this.mainWrap.querySelectorAll('[data-offcanvas-toggle]')\n\n      // Add classes\n      this.mainWrap.classList.add('offcanvas-main')\n      this.contentWrap.classList.add('offcanvas-content')\n\n      // Add event listeners for open buttons\n      this.openButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-open')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.open(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.open(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for toggle buttons\n      this.toggleButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-toggle')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Toggle button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.toggle(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.toggle(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for close buttons\n      this.closeButtons.forEach(button => {\n        button.addEventListener('click', () => this.close())\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      })\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('offcanvas-overlay')\n        this.overlay.addEventListener('click', () => this.close())\n        this.overlay.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      // Enable closing the bar with escape key\n      if (this.options.closeOnEsc) {\n        window.addEventListener('keydown', event => {\n          if (event.keyCode === 27) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      }\n\n      // Adjust content wrapper transform when window is resized\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeTimeout)\n\n        this.resizeTimeout = setTimeout(() => {\n          this.setContentWrapPush()\n        }, 200)\n      })\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  isValidPosition (position = null) {\n    return ['left', 'right', 'top', 'bottom'].indexOf(position) >= 0\n  }\n\n  addBar (position = 'left', options = {}) {\n    try {\n      // Validate required elements\n      if (!this.mainWrap || !this.contentWrap) return this\n\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      // Check that bar is not already defined\n      if (this.bars[position]) throw 'Bar with position \\'' + position + '\\' is already defined'\n\n      // Create new bar object\n      const newBar = new OffCanvasBar(options)\n      newBar.parentElement = this.mainWrap\n      newBar.position = position\n      newBar.init()\n\n      // Insert new bar\n      this.bars[position] = newBar\n\n      this.debug('Added bar with position \\'' + position + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  open (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined'\n      if (bar.element.classList.contains('offcanvas-bar--open')) return\n\n      // Close other bars\n      this.close()\n\n      // Open bar\n      this.debug('Opening bar \\'' + position + '\\'')\n      bar.open()\n\n      // Mark this bar as open\n      this.currentOpenBar = bar\n\n      // Push content wrap if needed\n      this.setContentWrapPush()\n\n      // Remember the button which was used to open off-canvas\n      this.previousOpenButton = button\n\n      // Show overlay\n      this.showOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  toggle (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      if (this.currentOpenBar && this.currentOpenBar.position) {\n        this.close()\n      } else {\n        this.open(position, button)\n      }\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  close () {\n    try {\n      if (!this.currentOpenBar) return\n\n      this.debug('Closing bar \\'' + this.currentOpenBar.position + '\\'')\n\n      this.currentOpenBar.close()\n\n      // Focus open button which was used to open the bar\n      if (this.previousOpenButton) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton = null\n      }\n\n      this.currentOpenBar = null\n      this.contentWrap.style.removeProperty('transform')\n      this.mainWrap.style.removeProperty('overflow')\n\n      this.hideOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  setContentWrapPush () {\n    if (!this.currentOpenBar) return\n    if (!this.currentOpenBar.options.mode) return\n\n    this.mainWrap.style.overflow = 'hidden'\n\n    if (['push', 'slide'].indexOf(this.currentOpenBar.options.mode) >= 0) {\n      switch (this.currentOpenBar.position) {\n        case 'left':\n          this.contentWrap.style.transform = 'translateX(' + this.currentOpenBar.element.offsetWidth + 'px)'\n          break\n\n        case 'right':\n          this.contentWrap.style.transform = 'translateX(-' + this.currentOpenBar.element.offsetWidth + 'px)'\n          break\n\n        case 'top':\n          this.contentWrap.style.transform = 'translateY(' + this.currentOpenBar.element.offsetHeight + 'px)'\n          break\n\n        case 'bottom':\n          this.contentWrap.style.transform = 'translateY(-' + this.currentOpenBar.element.offsetHeight + 'px)'\n          break\n      }\n    }\n  }\n\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Showing overlay')\n\n    this.overlay.classList.add('offcanvas-overlay--visible')\n  }\n\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Hiding overlay')\n\n    this.overlay.classList.remove('offcanvas-overlay--visible')\n  }\n}\n\nclass OffCanvasBar {\n\n  constructor(options) {\n    this.options = Object.assign({\n      selector: '',\n      focusableElementSelector: 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n      mode: 'float',\n    }, options)\n\n    this.parentElement = null\n    this.element = null\n    this.position = null\n  }\n\n  isValidMode(mode = '') {\n    return ['float', 'push', 'slide'].indexOf(mode) >= 0\n  }\n\n  init () {\n    // Validate required properties\n    if (!this.position) throw 'Missing position for bar'\n    if (!this.parentElement) throw 'Missing parent element for bar \\'' + this.position + '\\''\n\n    // If selector is not specified, use default\n    if (!this.options.selector) this.options.selector = '.offcanvas-bar--' + this.position\n\n    // Check that defined bar element exists\n    this.element = this.parentElement.querySelector(this.options.selector)\n    if (!this.element) throw 'Bar element was not found with selector: ' + this.options.selector\n\n    // Validate mode\n    if (!this.isValidMode(this.options.mode)) throw 'Invalid mode \\'' + this.options.mode + '\\' for bar \\'' + this.position + '\\'. Use one of the following values: float, push, slide.'\n\n    // Insert attributes\n    this.element.classList.add('offcanvas-bar')\n    this.element.setAttribute('data-offcanvas-bar-position', this.position)\n\n    // Disable focus\n    this.disableFocus()\n\n    return this\n  }\n\n  disableFocus () {\n    // Prevent focus on bar child elements\n    this.element.querySelectorAll(this.options.focusableElementSelector).forEach(item => {\n      item.setAttribute('tabindex', '-1')\n    })\n\n    // Prevent focus on bar\n    this.element.setAttribute('tabindex', '-1')\n    this.element.setAttribute('aria-hidden', 'true')\n  }\n\n  enableFocus () {\n    // Enable focus on bar child elements\n    this.element.querySelectorAll(this.options.focusableElementSelector).forEach(item => {\n      item.removeAttribute('tabindex')\n    })\n\n    // Focus on bar\n    this.element.removeAttribute('aria-hidden')\n    this.element.setAttribute('tabindex', '0')\n    this.element.focus()\n  }\n\n  open () {\n    this.enableFocus()\n    this.element.classList.add('offcanvas-bar--open')\n  }\n\n  close () {\n    this.disableFocus()\n    this.element.classList.remove('offcanvas-bar--open')\n  }\n\n}"]}