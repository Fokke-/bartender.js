"use strict";function _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t}).apply(this,arguments)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function _createClass(t,e,n){return e&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),t}var OffCanvas=function(){function t(e){_classCallCheck(this,t),this.options=_extends({debug:!1,overlay:!0,mainWrapSelector:".offcanvas-main",contentWrapSelector:".offcanvas-content",openButtonSelector:".offcanvas-open",closeButtonSelector:".offcanvas-close",toggleButtonSelector:".offcanvas-toggle"},e),this.overlay=null,this.mainWrap=document.querySelector(this.options.mainWrapSelector),this.contentWrap=document.querySelector(this.options.contentWrapSelector),this.openButtons=document.querySelectorAll(this.options.openButtonSelector),this.closeButtons=document.querySelectorAll(this.options.closeButtonSelector),this.toggleButtons=document.querySelectorAll(this.options.toggleButtonSelector),this.bars={left:null,right:null,top:null,bottom:null},this.currentOpenBar=null,this.previousOpenButton=null,this.resizeTimeout=null,this.init()}return _createClass(t,[{key:"log",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";console.log("Off-canvas: "+t)}},{key:"logError",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";console.error("Off-canvas: "+t)}},{key:"debug",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.options.debug&&console.log("Off-canvas debug: "+t)}},{key:"init",value:function(){var t=this;try{if(!this.mainWrap)throw"Main wrap element was not found with selector: "+this.options.mainWrapSelector;if(!this.contentWrap)throw"Content wrap element was not found with selector: "+this.options.contentWrapSelector;this.mainWrap.classList.add("offcanvas-main"),this.contentWrap.classList.add("offcanvas-content"),this.openButtons.forEach((function(e){var n=e.getAttribute("data-offcanvas-bar")||"left";t.isValidPosition(n)?(e.addEventListener("click",(function(){return t.openBar(n,e)})),e.addEventListener("keydown",(function(o){[13,32].indexOf(o.keyCode)>-1&&(o.preventDefault(),t.openBar(n,e))}))):t.logError("Open button has invalid bar position '"+n+"' defined. Use one of the following values: left, right, top, bottom")})),this.closeButtons.forEach((function(e){e.addEventListener("click",(function(){return t.closeBar()})),e.addEventListener("keydown",(function(e){[13,32].indexOf(e.keyCode)>-1&&(e.preventDefault(),t.closeBar())}))})),this.options.overlay&&!this.overlay&&(this.overlay=document.createElement("div"),this.overlay.classList.add("offcanvas-overlay"),this.overlay.addEventListener("click",(function(){return t.closeBar()})),this.overlay.addEventListener("keydown",(function(e){[13,32].indexOf(e.keyCode)>-1&&(e.preventDefault(),t.closeBar())})),this.contentWrap.appendChild(this.overlay)),window.addEventListener("keydown",(function(e){27===e.keyCode&&(e.preventDefault(),t.closeBar())})),window.addEventListener("resize",(function(){clearTimeout(t.resizeTimeout),console.log(t.resizeTimeout),t.resizeTimeout=setTimeout((function(){t.setContentWrapPush()}),200)}))}catch(t){this.logError(t)}}},{key:"isValidPosition",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return["left","right","top","bottom"].includes(t)}},{key:"addBar",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"left",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{if(!this.isValidPosition(t))throw"Invalid bar position '"+t+"'. Use one of the following values: left, right, top, bottom";if(this.bars[t])throw"Bar with position '"+t+"' is already defined";var n=new OffCanvasBar(e);n.parentElement=this.mainWrap,n.position=t,n.init(),this.bars[t]=n,this.debug("Added bar with position '"+t+"'")}catch(t){this.logError(t)}return this}},{key:"openBar",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;try{if(!this.isValidPosition(t))throw"Invalid bar position '"+t+"'. Use one of the following values: left, right, top, bottom";var n=this.bars[t];if(!n)throw"Bar with position '"+t+"' is not defined";if(n.element.classList.contains("offcanvas-bar--open"))return;this.closeBar(),this.debug("Opening bar '"+t+"'"),n.open(),this.currentOpenBar=n,this.setContentWrapPush(),this.previousOpenButton=e,this.showOverlay()}catch(t){this.logError(t)}return this}},{key:"closeBar",value:function(){try{if(!this.currentOpenBar)return;this.currentOpenBar.close(),this.previousOpenButton&&(this.previousOpenButton.focus(),this.previousOpenButton=null),this.currentOpenBar=null,this.contentWrap.style.transform=null,this.mainWrap.style.overflowX=null,this.mainWrap.style.overflowY=null,this.hideOverlay()}catch(t){this.logError(t)}return this}},{key:"setContentWrapPush",value:function(){if(this.currentOpenBar&&this.currentOpenBar.options.mode&&["push","slide"].includes(this.currentOpenBar.options.mode))switch(this.currentOpenBar.position){case"left":this.contentWrap.style.transform="translateX("+this.currentOpenBar.element.offsetWidth+"px)",this.mainWrap.style.overflowX="hidden";break;case"right":this.contentWrap.style.transform="translateX(-"+this.currentOpenBar.element.offsetWidth+"px)",this.mainWrap.style.overflowX="hidden";break;case"top":this.contentWrap.style.transform="translateY("+this.currentOpenBar.element.offsetHeight+"px)",this.mainWrap.style.overflowY="hidden";break;case"bottom":this.contentWrap.style.transform="translateY(-"+this.currentOpenBar.element.offsetHeight+"px)",this.mainWrap.style.overflowY="hidden"}}},{key:"showOverlay",value:function(){this.overlay&&(this.overlay.classList.contains("offcanvas-overlay--visible")||(this.debug("Showing overlay"),this.overlay.classList.add("offcanvas-overlay--visible")))}},{key:"hideOverlay",value:function(){this.overlay&&this.overlay.classList.contains("offcanvas-overlay--visible")&&(this.debug("Hiding overlay"),this.overlay.classList.remove("offcanvas-overlay--visible"))}}]),t}(),OffCanvasBar=function(){function t(e){_classCallCheck(this,t),this.options=_extends({selector:"",focusableElementSelector:'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])',mode:"float"},e),this.parentElement=null,this.element=null,this.position=null}return _createClass(t,[{key:"isValidMode",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return["float","push","slide"].includes(t)}},{key:"init",value:function(){if(!this.position)throw"Missing position for bar";if(!this.parentElement)throw"Missing parent element for bar with position '"+this.position+"'";if(!this.options.selector)throw"Missing element selector for bar with position '"+this.position+"'";if(this.element=this.parentElement.querySelector(this.options.selector),!this.element)throw"Bar element was not found with selector: "+this.options.selector;if(!this.isValidMode(this.options.mode))throw"Invalid mode '"+this.options.mode+"' for bar '"+this.position+"'. Use one of the following values: float, push, slide.";return this.element.classList.add("offcanvas-bar"),this.element.setAttribute("data-offcanvas-bar-position",this.position),this.disableFocus(),this}},{key:"disableFocus",value:function(){this.element.querySelectorAll(this.options.focusableElementSelector).forEach((function(t){t.setAttribute("tabindex","-1")})),this.element.setAttribute("tabindex","-1"),this.element.setAttribute("aria-hidden","true")}},{key:"enableFocus",value:function(){this.element.querySelectorAll(this.options.focusableElementSelector).forEach((function(t){t.removeAttribute("tabindex")})),this.element.removeAttribute("aria-hidden"),this.element.setAttribute("tabindex","0"),this.element.focus()}},{key:"open",value:function(){this.enableFocus(),this.element.classList.add("offcanvas-bar--open")}},{key:"close",value:function(){this.disableFocus(),this.element.classList.remove("offcanvas-bar--open")}}]),t}();
//# sourceMappingURL=offcanvas.js.map
