(function(n,s){typeof exports=="object"&&typeof module!="undefined"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(n=typeof globalThis!="undefined"?globalThis:n||self,s(n.Bartender={}))})(this,function(n){"use strict";var g=Object.defineProperty;var v=Object.getOwnPropertySymbols;var y=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable;var f=(n,s,i)=>s in n?g(n,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):n[s]=i,d=(n,s)=>{for(var i in s||(s={}))y.call(s,i)&&f(n,i,s[i]);if(v)for(var i of v(s))O.call(s,i)&&f(n,i,s[i]);return n};var a=(n,s,i)=>(f(n,typeof s!="symbol"?s+"":s,i),i);var w=(n,s,i)=>new Promise((u,b)=>{var c=t=>{try{e(i.next(t))}catch(r){b(r)}},l=t=>{try{e(i.throw(t))}catch(r){b(r)}},e=t=>t.done?u(t.value):Promise.resolve(t.value).then(c,l);e((i=i.apply(n,s)).next())});const s="",i=(l,e)=>{if(l instanceof HTMLElement)return l;if(typeof e=="string")return document.querySelector(e)||void 0},u=(l=100)=>new Promise(e=>l?setTimeout(e,l):e());class b{constructor(e,t={},r){a(this,"bartender");a(this,"name");a(this,"el");a(this,"elSelector");a(this,"position");a(this,"mode");a(this,"isOpen",!1);a(this,"openTimeout");if(!e)throw"Bar name is required";if(!r)throw`You must pass Bartender instance for bar '${this.name}'`;if(Object.assign(this,t),this.name=e,this.bartender=r,this.el=i(this.el,this.elSelector),!this.el)throw`Content element for bar '${this.name}' is required`;if(this.el.parentElement!==this.bartender.mainEl)throw`Element of bar '${this.name}' must be a direct child of the Bartender main element`;this.el.classList.add("bartender__bar"),this.setPosition(this.position),this.setMode(this.mode)}setPosition(e){var r,o;if(!e)throw`Position is required for bar '${this.name}'`;const t=["left","right","top","bottom"];if(!t.includes(e))throw`Invalid position '${e}' for bar '${this.name}'. Use one of the following: ${t.join(", ")}.`;return this.position&&((r=this.el)==null||r.classList.remove(`bartender__bar--${this.position}`)),this.position=e,(o=this.el)==null||o.classList.add(`bartender__bar--${this.position}`),this}setMode(e){var r,o;if(!e)throw`Mode is required for bar '${this.name}'`;const t=["float","push","reveal"];if(!t.includes(e))throw`Invalid mode '${e}' for bar '${this.name}'. Use one of the following: ${t.join(", ")}.`;return this.mode&&((r=this.el)==null||r.classList.remove(`bartender__bar--${this.mode}`)),this.mode=e,(o=this.el)==null||o.classList.add(`bartender__bar--${this.mode}`),this}open(){return w(this,null,function*(){var t,r;const e=(t=this.bartender)==null?void 0:t.getOpenBar();return(e==null?void 0:e.name)===this.name?Promise.resolve(this):((r=this.bartender)==null?void 0:r.busy)===!0?Promise.resolve(this):(this.bartender.busy=!0,e&&(yield e.close(),yield u(this.openTimeout)),new Promise(o=>{var h,m,p;(h=this.el)==null||h.addEventListener("transitionend",()=>{var E;return(E=this.el)==null||E.dispatchEvent(new CustomEvent("bartender-bar-after-open",{bubbles:!0,detail:{bar:this}})),this.bartender.busy=!1,o(this)},{once:!0}),(m=this.el)==null||m.dispatchEvent(new CustomEvent("bartender-bar-before-open",{bubbles:!0,detail:{bar:this}})),(p=this.el)==null||p.classList.add("bartender__bar--open"),this.isOpen=!0}))})}close(){return new Promise(e=>{var t,r,o;(t=this.el)==null||t.addEventListener("transitionend",()=>{var h;return(h=this.el)==null||h.dispatchEvent(new CustomEvent("bartender-bar-after-close",{bubbles:!0,detail:{bar:this}})),e(this)},{once:!0}),(r=this.el)==null||r.dispatchEvent(new CustomEvent("bartender-bar-before-close",{bubbles:!0,detail:{bar:this}})),(o=this.el)==null||o.classList.remove("bartender__bar--open"),this.isOpen=!1})}toggle(){return this.isOpen===!0?this.close():this.open()}}class c{constructor(e={},t={}){a(this,"debug",!1);a(this,"busy",!1);a(this,"mainEl");a(this,"mainElSelector");a(this,"contentEl");a(this,"contentElSelector");a(this,"bars",{});a(this,"barDefaultOptions",{});if(Object.assign(this,d({debug:!1,mainEl:void 0,mainElSelector:".bartender",contentEl:void 0,contentElSelector:".bartender__content"},e)),Object.assign(this.barDefaultOptions,d({position:"left",mode:"float",openTimeout:100},t)),this.mainEl=i(this.mainEl,this.mainElSelector),!this.mainEl)throw"Main element is required";if(this.contentEl=i(this.contentEl,this.contentElSelector),!this.contentEl)throw"Content element is required";if(this.contentEl.parentElement!==this.mainEl)throw"Content element must be a direct child of the main element";this.mainEl.classList.add("bartender--ready"),this.mainEl.dispatchEvent(new CustomEvent("bartender-init",{bubbles:!0,detail:{bartender:this}}))}addBar(e,t={}){var r;if(!e||typeof e!="string")throw"Name is required";if(this.bars[e])throw`Bar with name '${e}' is already defined`;return t=Object.assign({},d(d({},this.barDefaultOptions),t)),this.bars[e]=new b(e,t,this),(r=this.mainEl)==null||r.dispatchEvent(new CustomEvent("bartender-bar-added",{bubbles:!0,detail:{bar:this.bars[e]}})),this}getOpenBar(){const e=Object.keys(this.bars).find(t=>this.bars[t].isOpen===!0);return e?this.bars[e]:null}}n.Bartender=c,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
