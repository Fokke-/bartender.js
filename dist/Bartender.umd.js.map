{"version":3,"file":"Bartender.umd.js","sources":["../src/lib/utils.ts","../src/lib/BartenderError.ts","../src/lib/Overlay.ts","../src/lib/Bar.ts","../src/lib/PushElement.ts","../src/lib/Bartender.ts"],"sourcesContent":["import type { BartenderElementQuery } from './types'\n\n/**\n * Resolve HTML element\n *\n * @param query\n * @returns Resolved element or null if none found\n */\nexport const resolveElement = (query: BartenderElementQuery): HTMLElement | null => {\n  if (!query) return null\n  if (typeof query === 'string') return document.querySelector(query) as HTMLElement\n  if (query instanceof Element) return query as HTMLElement\n\n  return null\n}\n\nexport const sleep = (duration = 100): Promise<void> => {\n  return new Promise(resolve => {\n    if (!duration) return resolve()\n\n    return setTimeout(resolve, duration)\n  })\n}\n","export class BartenderError extends Error {\n  constructor (message: string) {\n    super(message)\n    this.name = 'Bartender error'\n  }\n}\n","import { BartenderError } from './BartenderError'\n\nexport class Overlay {\n  private _name = ''\n  private _enabled = true\n  readonly el: HTMLElement\n\n  constructor (name: string, enabled = true) {\n    this.el = document.createElement('div')\n    this.el.classList.add('bartender__overlay')\n\n    try {\n      this.name = name\n    } catch (error) {\n      if (error instanceof DOMException) throw new BartenderError(`Name '${name}' is not valid HTML class name`)\n\n      throw new BartenderError(error as string)\n    }\n\n    this.enabled = enabled\n  }\n\n  public destroy (): this {\n    this.el.remove()\n\n    return this\n  }\n\n  public get name () {\n    return this._name\n  }\n\n  public set name (name: string) {\n    this.el.classList.remove(`bartender__overlay--${this._name}`)\n    this.el.classList.add(`bartender__overlay--${name}`)\n    this._name = name\n  }\n\n  public get enabled () {\n    return this._enabled\n  }\n\n  public set enabled (val: boolean) {\n    if (val === true) {\n      this.el.classList.remove('bartender__overlay--transparent')\n    } else {\n      this.el.classList.add('bartender__overlay--transparent')\n    }\n\n    this._enabled = val\n  }\n\n  public show (): this {\n    this.el.classList.add('bartender__overlay--visible')\n\n    return this\n  }\n\n  public hide (): this {\n    this.el.classList.remove('bartender__overlay--visible')\n\n    return this\n  }\n}\n","import type {\n  BartenderBarOptions,\n  BartenderBarPosition,\n  BartenderBarMode,\n  BartenderPushStyles\n} from './types'\nimport { BartenderError } from './BartenderError'\nimport { Overlay } from './Overlay'\nimport {\n  resolveElement,\n  sleep\n} from './utils'\n\nexport class Bar {\n  private ready = false\n  readonly overlayObj: Overlay\n  private _name = ''\n  readonly el: HTMLElement\n  private _position: BartenderBarPosition = 'left'\n  private _mode: BartenderBarMode = 'float'\n  private _overlay = true\n  private _permanent = false\n  private _scrollTop = true\n  private isOpened = false\n\n  constructor (name: string, options: BartenderBarOptions = {}) {\n    if (!name) throw 'Bar name is required'\n\n    this.overlayObj = new Overlay(name, this.overlay)\n    this.name = name\n\n    // Get element\n    const el = resolveElement(options.el || null)\n    if (!el) throw new BartenderError(`Content element for bar '${this.name}' is required`)\n    this.el = el\n    this.el.classList.add('bartender__bar')\n    this.el.setAttribute('tabindex', '-1')\n    this.el.setAttribute('aria-hidden', 'true')\n\n    this.position = options.position ?? this.position\n    this.mode = options.mode ?? this._mode\n    this.overlay = options.overlay ?? this._overlay\n    this.permanent = options.permanent ?? this._permanent\n    this.scrollTop = options.scrollTop ?? this._scrollTop\n\n    this.ready = true\n  }\n\n  destroy (removeElement = false): this {\n    if (removeElement === true) this.el.remove()\n    this.overlayObj.destroy()\n\n    return this\n  }\n\n  get name () {\n    return this._name\n  }\n\n  set name (name: string) {\n    this._name = name\n    this.overlayObj.name = name\n  }\n\n  get position () {\n    return this._position\n  }\n\n  set position (position: BartenderBarPosition) {\n    // Validate position\n    if (!position) throw `Position is required for bar '${this.name}'`\n\n    const validPositions = [\n      'left',\n      'right',\n      'top',\n      'bottom',\n    ]\n\n    if (!validPositions.includes(position)) throw `Invalid position '${position}' for bar '${this.name}'. Use one of the following: ${validPositions.join(', ')}.`\n\n    // Temporarily disable transition\n    this.el.classList.add('bartender-disable-transition')\n\n    // Update element classes\n    this.el.classList.remove(`bartender__bar--${this.position}`)\n    this.el.classList.add(`bartender__bar--${position}`)\n\n    // Set new position\n    this._position = position\n\n    // Return transition\n    setTimeout(() => {\n      this.el.classList.remove('bartender-disable-transition')\n    })\n\n    // If position was changed after bar was created,\n    // dispatch event to update pushable elements\n    if (this.ready === true) this.el.dispatchEvent(new CustomEvent('bartender-bar-update', {\n      bubbles: true,\n      detail: { bar: this },\n    }))\n  }\n\n  get mode () {\n    return this._mode\n  }\n\n  set mode (mode: BartenderBarMode) {\n    // Validate mode\n    if (!mode) throw `Mode is required for bar '${this.name}'`\n\n    const validModes = [\n      'float',\n      'push',\n      'reveal',\n    ]\n\n    if (!validModes.includes(mode)) throw `Invalid mode '${mode}' for bar '${this.name}'. Use one of the following: ${validModes.join(', ')}.`\n\n    // Temporarily disable transition\n    this.el.classList.add('bartender-disable-transition')\n\n    // Update element classes\n    this.el.classList.remove(`bartender__bar--${this.mode}`)\n    this.el.classList.add(`bartender__bar--${mode}`)\n\n    // Set new mode\n    this._mode = mode\n\n    // Return transition\n    setTimeout(() => {\n      this.el.classList.remove('bartender-disable-transition')\n    })\n\n    // If mode was changed after bar was created,\n    // dispatch event to update pushable elements\n    if (this.ready === true) this.el.dispatchEvent(new CustomEvent('bartender-bar-update', {\n      bubbles: true,\n      detail: { bar: this },\n    }))\n  }\n\n  get overlay () {\n    return this._overlay\n  }\n\n  set overlay (val: boolean) {\n    this.overlayObj.enabled = val\n    this._overlay = val\n\n    if (this.ready === true) this.el.dispatchEvent(new CustomEvent('bartender-bar-update', {\n      bubbles: true,\n      detail: { bar: this },\n    }))\n  }\n\n  get permanent () {\n    return this._permanent\n  }\n\n  set permanent (val: boolean) {\n    this._permanent = val\n\n    if (this.ready === true) this.el.dispatchEvent(new CustomEvent('bartender-bar-update', {\n      bubbles: true,\n      detail: { bar: this },\n    }))\n  }\n\n  get scrollTop () {\n    return this._scrollTop\n  }\n\n  set scrollTop (val: boolean) {\n    this._scrollTop = val\n\n    if (this.ready === true) this.el.dispatchEvent(new CustomEvent('bartender-bar-update', {\n      bubbles: true,\n      detail: { bar: this },\n    }))\n  }\n\n  public isOpen (): boolean {\n    return this.isOpened\n  }\n\n  public getTransitionDuration (): number {\n    if (!this.el) return 0\n\n    const duration = window.getComputedStyle(this.el).getPropertyValue('transition-duration') || '0s'\n    return parseFloat(duration) * 1000\n  }\n\n  async open (): Promise<this> {\n    // Dispatch 'before open' event\n    this.el.dispatchEvent(new CustomEvent('bartender-bar-before-open', {\n      bubbles: true,\n      detail: { bar: this },\n    }))\n\n    if (this.scrollTop === true) this.el.scrollTo(0, 0)\n    this.el.classList.add('bartender__bar--open')\n    this.el.setAttribute('aria-hidden', 'false')\n    this.el.focus()\n    this.overlayObj.show()\n    this.isOpened = true\n\n    await sleep(this.getTransitionDuration())\n\n    // Dispatch 'after open' event\n    this.el.dispatchEvent(new CustomEvent('bartender-bar-after-open', {\n      bubbles: true,\n      detail: { bar: this },\n    }))\n\n    return Promise.resolve(this)\n  }\n\n  async close (): Promise<this> {\n    this.el.dispatchEvent(new CustomEvent('bartender-bar-before-close', {\n      bubbles: true,\n      detail: { bar: this },\n    }))\n\n    this.el.classList.remove('bartender__bar--open')\n    this.el.setAttribute('aria-hidden', 'true')\n    this.overlayObj.hide()\n    this.isOpened = false\n\n    await sleep(this.getTransitionDuration())\n\n    this.el.dispatchEvent(new CustomEvent('bartender-bar-after-close', {\n      bubbles: true,\n      detail: { bar: this },\n    }))\n\n    return Promise.resolve(this)\n  }\n\n  getPushStyles (): BartenderPushStyles {\n    if (!this.position || !this.el) {\n      return {\n        transform: '',\n        transitionDuration: '',\n        transitionTimingFunction: '',\n      }\n    }\n\n    return {\n      transform: {\n        left: `translateX(${this.el.offsetWidth}px)`,\n        right: `translateX(-${this.el.offsetWidth}px)`,\n        top: `translateY(${this.el.offsetHeight}px)`,\n        bottom: `translateY(-${this.el.offsetHeight}px)`,\n      }[this.position] || '',\n      transitionDuration: window.getComputedStyle(this.el).getPropertyValue('transition-duration') || '',\n      transitionTimingFunction: window.getComputedStyle(this.el).getPropertyValue('transition-timing-function') || '',\n    }\n  }\n}\n","import type {\n  BartenderPushElementOptions,\n  BartenderBarMode,\n  BartenderPushStyles,\n  BartenderBarPosition\n} from './types'\nimport { BartenderError } from './BartenderError'\nimport { Bar } from './Bar'\nimport { resolveElement } from './utils'\n\nexport class PushElement {\n  private el: HTMLElement\n  readonly bars: Bar[]\n  readonly modes: BartenderBarMode[]\n  readonly positions: BartenderBarPosition[]\n  private isPushed = false\n\n  constructor (options: BartenderPushElementOptions = {}) {\n    // Get element\n    const el = resolveElement(options.el || null)\n    if (!el) throw new BartenderError('Element is required for push element')\n    this.el = el\n\n    this.bars = options.bars || []\n    this.modes = options.modes || []\n    this.positions = options.positions || []\n  }\n\n  public push (bar: Bar, pushStyles: BartenderPushStyles): this {\n    // If this element is not supposed to be pushed,\n    // clear transition styles\n    if (\n      (this.bars.length && !this.bars.includes(bar)) ||\n      (this.modes.length && !this.modes.includes(bar.mode)) ||\n      (this.positions.length && !this.positions.includes(bar.position))\n    ) {\n      this.el.style.transform = ''\n      this.el.style.transitionTimingFunction = ''\n      this.el.style.transitionDuration = ''\n      this.isPushed = false\n\n      return this\n    }\n\n    this.el.style.transform = pushStyles.transform\n    this.el.style.transitionTimingFunction = pushStyles.transitionTimingFunction\n    this.el.style.transitionDuration = pushStyles.transitionDuration\n    this.isPushed = true\n\n    return this\n  }\n\n  public pull (pushStyles: BartenderPushStyles): this {\n    if (this.isPushed === false) return this\n\n    this.el.style.transform = 'translateX(0) translateY(0)'\n    this.el.style.transitionTimingFunction = pushStyles.transitionTimingFunction\n    this.el.style.transitionDuration = pushStyles.transitionDuration\n    this.isPushed = false\n\n    return this\n  }\n}\n","import type {\n  BartenderOptions,\n  BartenderBarOptions,\n  BartenderPushElementOptions\n} from './types'\nimport { Queue } from 'async-await-queue'\nimport { debounce } from 'ts-debounce'\nimport {\n  resolveElement,\n  sleep\n} from './utils'\nimport { BartenderError } from './BartenderError'\nimport { Bar } from './Bar'\nimport { PushElement } from './PushElement'\n\nexport class Bartender {\n  // TODO: add support for focus traps\n\n  public debug = false\n  readonly el: HTMLElement\n  readonly contentEl: HTMLElement\n  readonly switchTimeout: number = 150\n  readonly bars: Bar[] = []\n  readonly barDefaultOptions: BartenderBarOptions = {\n    el: null,\n    position: 'left',\n    mode: 'float',\n    overlay: true,\n    permanent: false,\n    scrollTop: true,\n  }\n  private previousOpenButton?: HTMLElement | null = null\n  private pushableElements: PushElement[] = []\n  private queue: Queue\n  private resizeDebounce\n  private onBarUpdateHandler\n  private onKeydownHandler\n  private onResizeHandler\n\n  constructor (\n    options: BartenderOptions = {},\n    barOptions: BartenderBarOptions = {}\n  ) {\n    this.debug = options.debug ?? this.debug\n    this.switchTimeout = options.switchTimeout ?? this.switchTimeout\n    this.barDefaultOptions = Object.assign(this.barDefaultOptions, barOptions)\n\n    // Get main element\n    const el = resolveElement(options.el || '.bartender')\n    if (!el) throw new BartenderError('Main element is required')\n    this.el = el\n    this.el.classList.add('bartender')\n\n    // Get content element\n    const contentEl = resolveElement(options.contentEl || '.bartender__content')\n    if (!contentEl) throw new BartenderError('Content element is required')\n    if (contentEl.parentElement !== this.el) throw new BartenderError('Content element must be a direct child of the main element')\n    this.contentEl = contentEl\n    this.contentEl.classList.add('bartender__content')\n    this.contentEl.setAttribute('tabindex', '-1')\n\n    // Register content element as pushable element\n    this.addPushElement({\n      el: this.contentEl,\n      modes: [\n        'push',\n        'reveal',\n      ],\n    })\n\n    // Initialize queue\n    this.queue = new Queue(1)\n\n    // Debouncer for resizing\n    this.resizeDebounce = debounce(() => {\n      this.pushElements(this.getOpenBar())\n    }, 100)\n\n    // Add event listeners\n    this.onBarUpdateHandler = this.onBarUpdate.bind(this)\n    window.addEventListener('bartender-bar-update', this.onBarUpdateHandler)\n\n    this.onKeydownHandler = this.onKeydown.bind(this)\n    window.addEventListener('keydown', this.onKeydownHandler)\n\n    this.onResizeHandler = this.onResize.bind(this)\n    window.addEventListener('resize', this.onResizeHandler)\n\n    this.el.classList.add('bartender--ready')\n    this.el.dispatchEvent(new CustomEvent('bartender-init', {\n      bubbles: true,\n      detail: { bartender: this },\n    }))\n  }\n\n  public async destroy (removeBarElements = false): Promise<this> {\n    // Get all bar names\n    const barNames = this.bars.reduce((acc: string[], bar) => {\n      acc.push(bar.name)\n      return acc\n    }, [])\n\n    // Remove bars\n    for (const name of barNames) {\n      if (!this.getBar(name)) continue\n\n      await this.removeBar(name, removeBarElements)\n    }\n\n    // Remove classes\n    this.el.classList.remove('bartender', 'bartender--ready')\n    this.contentEl.classList.remove('bartender__content')\n\n    // Remove event listeners\n    window.removeEventListener('bartender-bar-update', this.onBarUpdateHandler)\n    window.removeEventListener('keydown', this.onKeydownHandler)\n    window.removeEventListener('resize', this.onResizeHandler)\n\n    this.el.dispatchEvent(new CustomEvent('bartender-destroyed', {\n      bubbles: true,\n      detail: { bartender: this },\n    }))\n\n    return Promise.resolve(this)\n  }\n\n  public getBar (name: string): Bar | null {\n    return this.bars.find(item => item.name === name) || null\n  }\n\n  private getOpenBar (): Bar | null {\n    return this.bars.find(item => item.isOpen() === true) || null\n  }\n\n  public addBar (name: string, userOptions: BartenderBarOptions = {}): Bar {\n    if (!name || typeof name !== 'string') throw new BartenderError('Bar name is required')\n    if (this.getBar(name)) throw new BartenderError(`Bar with name '${name}' is already defined`)\n\n    // Create a new bar\n    const bar = new Bar(name, {\n      ...this.barDefaultOptions,\n      ...userOptions,\n    })\n\n    // Check that bar element is a direct child on main element\n    if (bar.el.parentElement !== this.el) throw new BartenderError(`Element of bar '${bar.name}' must be a direct child of the Bartender main element`)\n\n    // Insert overlay element\n    this.contentEl?.appendChild(bar.overlayObj.el)\n    bar.overlayObj.el.addEventListener('click', () => {\n      if (bar.permanent === true) return\n\n      this.close()\n    })\n\n    this.bars.push(bar)\n\n    this.el.dispatchEvent(new CustomEvent('bartender-bar-added', {\n      bubbles: true,\n      detail: { bar },\n    }))\n\n    return bar\n  }\n\n  public async removeBar (name: string, removeElement = false): Promise<this> {\n    if (!name || typeof name !== 'string') throw new BartenderError('Bar name is required')\n\n    const bar = this.getBar(name)\n    if (!bar) throw new BartenderError(`Bar with name '${name}' was not found`)\n\n    if (this.getOpenBar() === bar) await this.close()\n\n    bar.destroy(removeElement)\n\n    const barIndex = this.bars.findIndex(item => item.name === name)\n    this.bars.splice(barIndex, 1)\n\n    this.el.dispatchEvent(new CustomEvent('bartender-bar-removed', {\n      bubbles: true,\n      detail: { name },\n    }))\n\n    return Promise.resolve(this)\n  }\n\n  private async openBar (name: string): Promise<Bar | BartenderError> {\n    const bar = this.getBar(name)\n    if (!bar) return Promise.reject(new BartenderError(`Unknown bar '${name}'`))\n    if (bar.isOpen() === true) return Promise.resolve(bar)\n\n    // Close any open bar\n    const openBar = this.getOpenBar()\n\n    if (openBar) {\n      await this.closeBar(openBar.name, true)\n      await sleep(this.switchTimeout)\n    }\n\n    this.el.classList.add('bartender--open')\n    this.contentEl.setAttribute('aria-hidden', 'true')\n    this.pushElements(bar)\n\n    return bar.open()\n  }\n\n  public async open (name: string, button?: HTMLElement | null): Promise<Bar | Error> {\n    const id = Symbol()\n    await this.queue.wait(id)\n\n    // Store reference to the button which was used to open the bar.\n    this.previousOpenButton = button\n\n    return this.openBar(name).finally(() => {\n      this.queue.end(id)\n    })\n  }\n\n  private async closeBar (name?: string, switching = false): Promise<Bar | null> {\n    const bar = name ? this.getBar(name) : this.getOpenBar()\n    if (!bar || !bar.isOpen()) return Promise.resolve(null)\n\n    this.pullElements(bar)\n    await bar.close()\n\n    // If we going to open right after closing the current one,\n    // don't update elements yet.\n    if (switching === false) {\n      this.el.classList.remove('bartender--open')\n      this.contentEl.setAttribute('aria-hidden', 'false')\n    }\n\n    return Promise.resolve(bar)\n  }\n\n  public async close (name?: string): Promise<Bar | null> {\n    const id = Symbol()\n    await this.queue.wait(id)\n\n    return this.closeBar(name).finally(() => {\n      this.queue.end(id)\n\n      // Focus to the previous open button\n      if (this.previousOpenButton) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton = null\n      } else {\n        this.contentEl.focus()\n      }\n    })\n  }\n\n  public async toggle (name: string, button?: HTMLElement | null): Promise<Bar | BartenderError | null> {\n    const bar = this.getBar(name)\n    if (!bar) return Promise.reject(new BartenderError(`Unknown bar '${name}'`))\n\n    return (bar.isOpen() === true) ? this.close() : this.open(name, button)\n  }\n\n  public addPushElement (options: BartenderPushElementOptions = {}): PushElement {\n    const pushElement = new PushElement(options)\n    this.pushableElements.push(pushElement)\n\n    return pushElement\n  }\n\n  private pushElements (bar: Bar | null): PushElement[] {\n    if (!bar || !this.pushableElements.length) return this.pushableElements\n\n    const pushStyles = bar.getPushStyles()\n\n    for (const item of this.pushableElements) {\n      item.push(bar, pushStyles)\n    }\n\n    return this.pushableElements\n  }\n\n  private pullElements (bar: Bar | null): PushElement[] {\n    if (!bar || !this.pushableElements.length) return this.pushableElements\n\n    const pushStyles = bar.getPushStyles()\n\n    for (const item of this.pushableElements) {\n      item.pull(pushStyles)\n    }\n\n    return this.pushableElements\n  }\n\n  private onBarUpdate (): void {\n    this.pushElements(this.getOpenBar())\n  }\n\n  private onKeydown (event: KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      const openBar = this.getOpenBar()\n      if (!openBar || openBar.permanent === true) return\n\n      this.close()\n    }\n  }\n\n  private onResize (): void {\n    this.resizeDebounce()\n  }\n}\n"],"names":["resolveElement","query","sleep","duration","resolve","BartenderError","message","Overlay","name","enabled","__publicField","error","val","Bar","options","el","_a","_b","_c","_d","_e","removeElement","position","validPositions","mode","validModes","__async","PushElement","bar","pushStyles","Bartender","barOptions","contentEl","Queue","debounce","removeBarElements","barNames","acc","item","userOptions","__spreadValues","barIndex","openBar","button","id","switching","pushElement","event"],"mappings":"i9BAQaA,EAAkBC,GACxBA,EACD,OAAOA,GAAU,SAAiB,SAAS,cAAcA,CAAK,EAC9DA,aAAiB,QAAgBA,EAE9B,KAJY,KAORC,EAAQ,CAACC,EAAW,MACxB,IAAI,QAAmBC,GACvBD,EAEE,WAAWC,EAASD,CAAQ,EAFbC,EAAQ,CAG/B,ECrBI,MAAMC,UAAuB,KAAM,CACxC,YAAaC,EAAiB,CAC5B,MAAMA,CAAO,EACb,KAAK,KAAO,iBACd,CACF,CCHO,MAAMC,CAAQ,CAKnB,YAAaC,EAAcC,EAAU,GAAM,CAJnCC,EAAA,aAAQ,IACRA,EAAA,gBAAW,IACVA,EAAA,WAGF,KAAA,GAAK,SAAS,cAAc,KAAK,EACjC,KAAA,GAAG,UAAU,IAAI,oBAAoB,EAEtC,GAAA,CACF,KAAK,KAAOF,QACLG,GACP,MAAIA,aAAiB,aAAoB,IAAIN,EAAe,SAASG,iCAAoC,EAEnG,IAAIH,EAAeM,CAAe,CAC1C,CAEA,KAAK,QAAUF,CACjB,CAEO,SAAiB,CACtB,YAAK,GAAG,SAED,IACT,CAEA,IAAW,MAAQ,CACjB,OAAO,KAAK,KACd,CAEA,IAAW,KAAMD,EAAc,CAC7B,KAAK,GAAG,UAAU,OAAO,uBAAuB,KAAK,OAAO,EAC5D,KAAK,GAAG,UAAU,IAAI,uBAAuBA,GAAM,EACnD,KAAK,MAAQA,CACf,CAEA,IAAW,SAAW,CACpB,OAAO,KAAK,QACd,CAEA,IAAW,QAASI,EAAc,CAC5BA,IAAQ,GACL,KAAA,GAAG,UAAU,OAAO,iCAAiC,EAErD,KAAA,GAAG,UAAU,IAAI,iCAAiC,EAGzD,KAAK,SAAWA,CAClB,CAEO,MAAc,CACd,YAAA,GAAG,UAAU,IAAI,6BAA6B,EAE5C,IACT,CAEO,MAAc,CACd,YAAA,GAAG,UAAU,OAAO,6BAA6B,EAE/C,IACT,CACF,CClDO,MAAMC,CAAI,CAYf,YAAaL,EAAcM,EAA+B,GAAI,CAXtDJ,EAAA,aAAQ,IACPA,EAAA,mBACDA,EAAA,aAAQ,IACPA,EAAA,WACDA,EAAA,iBAAkC,QAClCA,EAAA,aAA0B,SAC1BA,EAAA,gBAAW,IACXA,EAAA,kBAAa,IACbA,EAAA,kBAAa,IACbA,EAAA,gBAAW,kBAGjB,GAAI,CAACF,EAAY,KAAA,uBAEjB,KAAK,WAAa,IAAID,EAAQC,EAAM,KAAK,OAAO,EAChD,KAAK,KAAOA,EAGZ,MAAMO,EAAKf,EAAec,EAAQ,IAAM,IAAI,EAC5C,GAAI,CAACC,EAAI,MAAM,IAAIV,EAAe,4BAA4B,KAAK,mBAAmB,EACtF,KAAK,GAAKU,EACL,KAAA,GAAG,UAAU,IAAI,gBAAgB,EACjC,KAAA,GAAG,aAAa,WAAY,IAAI,EAChC,KAAA,GAAG,aAAa,cAAe,MAAM,EAErC,KAAA,UAAWC,EAAAF,EAAQ,WAAR,KAAAE,EAAoB,KAAK,SACpC,KAAA,MAAOC,EAAAH,EAAQ,OAAR,KAAAG,EAAgB,KAAK,MAC5B,KAAA,SAAUC,EAAAJ,EAAQ,UAAR,KAAAI,EAAmB,KAAK,SAClC,KAAA,WAAYC,EAAAL,EAAQ,YAAR,KAAAK,EAAqB,KAAK,WACtC,KAAA,WAAYC,EAAAN,EAAQ,YAAR,KAAAM,EAAqB,KAAK,WAE3C,KAAK,MAAQ,EACf,CAEA,QAASC,EAAgB,GAAa,CACpC,OAAIA,IAAkB,IAAM,KAAK,GAAG,SACpC,KAAK,WAAW,UAET,IACT,CAEA,IAAI,MAAQ,CACV,OAAO,KAAK,KACd,CAEA,IAAI,KAAMb,EAAc,CACtB,KAAK,MAAQA,EACb,KAAK,WAAW,KAAOA,CACzB,CAEA,IAAI,UAAY,CACd,OAAO,KAAK,SACd,CAEA,IAAI,SAAUc,EAAgC,CAE5C,GAAI,CAACA,EAAU,KAAM,iCAAiC,KAAK,QAE3D,MAAMC,EAAiB,CACrB,OACA,QACA,MACA,QAAA,EAGE,GAAA,CAACA,EAAe,SAASD,CAAQ,EAAG,KAAM,qBAAqBA,eAAsB,KAAK,oCAAoCC,EAAe,KAAK,IAAI,KAGrJ,KAAA,GAAG,UAAU,IAAI,8BAA8B,EAGpD,KAAK,GAAG,UAAU,OAAO,mBAAmB,KAAK,UAAU,EAC3D,KAAK,GAAG,UAAU,IAAI,mBAAmBD,GAAU,EAGnD,KAAK,UAAYA,EAGjB,WAAW,IAAM,CACV,KAAA,GAAG,UAAU,OAAO,8BAA8B,CAAA,CACxD,EAIG,KAAK,QAAU,IAAM,KAAK,GAAG,cAAc,IAAI,YAAY,uBAAwB,CACrF,QAAS,GACT,OAAQ,CAAE,IAAK,IAAK,CACrB,CAAA,CAAC,CACJ,CAEA,IAAI,MAAQ,CACV,OAAO,KAAK,KACd,CAEA,IAAI,KAAME,EAAwB,CAEhC,GAAI,CAACA,EAAM,KAAM,6BAA6B,KAAK,QAEnD,MAAMC,EAAa,CACjB,QACA,OACA,QAAA,EAGE,GAAA,CAACA,EAAW,SAASD,CAAI,EAAG,KAAM,iBAAiBA,eAAkB,KAAK,oCAAoCC,EAAW,KAAK,IAAI,KAGjI,KAAA,GAAG,UAAU,IAAI,8BAA8B,EAGpD,KAAK,GAAG,UAAU,OAAO,mBAAmB,KAAK,MAAM,EACvD,KAAK,GAAG,UAAU,IAAI,mBAAmBD,GAAM,EAG/C,KAAK,MAAQA,EAGb,WAAW,IAAM,CACV,KAAA,GAAG,UAAU,OAAO,8BAA8B,CAAA,CACxD,EAIG,KAAK,QAAU,IAAM,KAAK,GAAG,cAAc,IAAI,YAAY,uBAAwB,CACrF,QAAS,GACT,OAAQ,CAAE,IAAK,IAAK,CACrB,CAAA,CAAC,CACJ,CAEA,IAAI,SAAW,CACb,OAAO,KAAK,QACd,CAEA,IAAI,QAASZ,EAAc,CACzB,KAAK,WAAW,QAAUA,EAC1B,KAAK,SAAWA,EAEZ,KAAK,QAAU,IAAM,KAAK,GAAG,cAAc,IAAI,YAAY,uBAAwB,CACrF,QAAS,GACT,OAAQ,CAAE,IAAK,IAAK,CACrB,CAAA,CAAC,CACJ,CAEA,IAAI,WAAa,CACf,OAAO,KAAK,UACd,CAEA,IAAI,UAAWA,EAAc,CAC3B,KAAK,WAAaA,EAEd,KAAK,QAAU,IAAM,KAAK,GAAG,cAAc,IAAI,YAAY,uBAAwB,CACrF,QAAS,GACT,OAAQ,CAAE,IAAK,IAAK,CACrB,CAAA,CAAC,CACJ,CAEA,IAAI,WAAa,CACf,OAAO,KAAK,UACd,CAEA,IAAI,UAAWA,EAAc,CAC3B,KAAK,WAAaA,EAEd,KAAK,QAAU,IAAM,KAAK,GAAG,cAAc,IAAI,YAAY,uBAAwB,CACrF,QAAS,GACT,OAAQ,CAAE,IAAK,IAAK,CACrB,CAAA,CAAC,CACJ,CAEO,QAAmB,CACxB,OAAO,KAAK,QACd,CAEO,uBAAiC,CACtC,GAAI,CAAC,KAAK,GAAW,MAAA,GAEf,MAAAT,EAAW,OAAO,iBAAiB,KAAK,EAAE,EAAE,iBAAiB,qBAAqB,GAAK,KACtF,OAAA,WAAWA,CAAQ,EAAI,GAChC,CAEM,MAAuB,QAAAuB,EAAA,sBAE3B,YAAK,GAAG,cAAc,IAAI,YAAY,4BAA6B,CACjE,QAAS,GACT,OAAQ,CAAE,IAAK,IAAK,CACrB,CAAA,CAAC,EAEE,KAAK,YAAc,IAAW,KAAA,GAAG,SAAS,EAAG,CAAC,EAC7C,KAAA,GAAG,UAAU,IAAI,sBAAsB,EACvC,KAAA,GAAG,aAAa,cAAe,OAAO,EAC3C,KAAK,GAAG,QACR,KAAK,WAAW,OAChB,KAAK,SAAW,GAEV,MAAAxB,EAAM,KAAK,sBAAA,CAAuB,EAGxC,KAAK,GAAG,cAAc,IAAI,YAAY,2BAA4B,CAChE,QAAS,GACT,OAAQ,CAAE,IAAK,IAAK,CACrB,CAAA,CAAC,EAEK,QAAQ,QAAQ,IAAI,CAC7B,GAEM,OAAwB,QAAAwB,EAAA,sBAC5B,YAAK,GAAG,cAAc,IAAI,YAAY,6BAA8B,CAClE,QAAS,GACT,OAAQ,CAAE,IAAK,IAAK,CACrB,CAAA,CAAC,EAEG,KAAA,GAAG,UAAU,OAAO,sBAAsB,EAC1C,KAAA,GAAG,aAAa,cAAe,MAAM,EAC1C,KAAK,WAAW,OAChB,KAAK,SAAW,GAEV,MAAAxB,EAAM,KAAK,sBAAA,CAAuB,EAExC,KAAK,GAAG,cAAc,IAAI,YAAY,4BAA6B,CACjE,QAAS,GACT,OAAQ,CAAE,IAAK,IAAK,CACrB,CAAA,CAAC,EAEK,QAAQ,QAAQ,IAAI,CAC7B,GAEA,eAAsC,CACpC,MAAI,CAAC,KAAK,UAAY,CAAC,KAAK,GACnB,CACL,UAAW,GACX,mBAAoB,GACpB,yBAA0B,EAAA,EAIvB,CACL,UAAW,CACT,KAAM,cAAc,KAAK,GAAG,iBAC5B,MAAO,eAAe,KAAK,GAAG,iBAC9B,IAAK,cAAc,KAAK,GAAG,kBAC3B,OAAQ,eAAe,KAAK,GAAG,iBAAA,EAC/B,KAAK,QAAQ,GAAK,GACpB,mBAAoB,OAAO,iBAAiB,KAAK,EAAE,EAAE,iBAAiB,qBAAqB,GAAK,GAChG,yBAA0B,OAAO,iBAAiB,KAAK,EAAE,EAAE,iBAAiB,4BAA4B,GAAK,EAAA,CAEjH,CACF,CC1PO,MAAMyB,CAAY,CAOvB,YAAab,EAAuC,GAAI,CANhDJ,EAAA,WACCA,EAAA,aACAA,EAAA,cACAA,EAAA,kBACDA,EAAA,gBAAW,IAIjB,MAAMK,EAAKf,EAAec,EAAQ,IAAM,IAAI,EAC5C,GAAI,CAACC,EAAU,MAAA,IAAIV,EAAe,sCAAsC,EACxE,KAAK,GAAKU,EAEL,KAAA,KAAOD,EAAQ,MAAQ,CAAA,EACvB,KAAA,MAAQA,EAAQ,OAAS,CAAA,EACzB,KAAA,UAAYA,EAAQ,WAAa,CAAA,CACxC,CAEO,KAAMc,EAAUC,EAAuC,CAG5D,OACG,KAAK,KAAK,QAAU,CAAC,KAAK,KAAK,SAASD,CAAG,GAC3C,KAAK,MAAM,QAAU,CAAC,KAAK,MAAM,SAASA,EAAI,IAAI,GAClD,KAAK,UAAU,QAAU,CAAC,KAAK,UAAU,SAASA,EAAI,QAAQ,GAE1D,KAAA,GAAG,MAAM,UAAY,GACrB,KAAA,GAAG,MAAM,yBAA2B,GACpC,KAAA,GAAG,MAAM,mBAAqB,GACnC,KAAK,SAAW,GAET,OAGJ,KAAA,GAAG,MAAM,UAAYC,EAAW,UAChC,KAAA,GAAG,MAAM,yBAA2BA,EAAW,yBAC/C,KAAA,GAAG,MAAM,mBAAqBA,EAAW,mBAC9C,KAAK,SAAW,GAET,KACT,CAEO,KAAMA,EAAuC,CAClD,OAAI,KAAK,WAAa,GAAc,MAE/B,KAAA,GAAG,MAAM,UAAY,8BACrB,KAAA,GAAG,MAAM,yBAA2BA,EAAW,yBAC/C,KAAA,GAAG,MAAM,mBAAqBA,EAAW,mBAC9C,KAAK,SAAW,GAET,KACT,CACF,CC/CO,MAAMC,CAAU,CAwBrB,YACEhB,EAA4B,GAC5BiB,EAAkC,CAAA,EAClC,CAxBKrB,EAAA,aAAQ,IACNA,EAAA,WACAA,EAAA,kBACAA,EAAA,qBAAwB,KACxBA,EAAA,YAAc,CAAA,GACdA,EAAA,yBAAyC,CAChD,GAAI,KACJ,SAAU,OACV,KAAM,QACN,QAAS,GACT,UAAW,GACX,UAAW,EAAA,GAELA,EAAA,0BAA0C,MAC1CA,EAAA,wBAAkC,CAAA,GAClCA,EAAA,cACAA,EAAA,uBACAA,EAAA,2BACAA,EAAA,yBACAA,EAAA,gCAMD,KAAA,OAAQM,EAAAF,EAAQ,QAAR,KAAAE,EAAiB,KAAK,MAC9B,KAAA,eAAgBC,EAAAH,EAAQ,gBAAR,KAAAG,EAAyB,KAAK,cACnD,KAAK,kBAAoB,OAAO,OAAO,KAAK,kBAAmBc,CAAU,EAGzE,MAAMhB,EAAKf,EAAec,EAAQ,IAAM,YAAY,EACpD,GAAI,CAACC,EAAU,MAAA,IAAIV,EAAe,0BAA0B,EAC5D,KAAK,GAAKU,EACL,KAAA,GAAG,UAAU,IAAI,WAAW,EAGjC,MAAMiB,EAAYhC,EAAec,EAAQ,WAAa,qBAAqB,EAC3E,GAAI,CAACkB,EAAiB,MAAA,IAAI3B,EAAe,6BAA6B,EAClE,GAAA2B,EAAU,gBAAkB,KAAK,GAAU,MAAA,IAAI3B,EAAe,4DAA4D,EAC9H,KAAK,UAAY2B,EACZ,KAAA,UAAU,UAAU,IAAI,oBAAoB,EAC5C,KAAA,UAAU,aAAa,WAAY,IAAI,EAG5C,KAAK,eAAe,CAClB,GAAI,KAAK,UACT,MAAO,CACL,OACA,QACF,CAAA,CACD,EAGI,KAAA,MAAQ,IAAIC,EAAA,MAAM,CAAC,EAGnB,KAAA,eAAiBC,EAAAA,SAAS,IAAM,CAC9B,KAAA,aAAa,KAAK,WAAY,CAAA,GAClC,GAAG,EAGN,KAAK,mBAAqB,KAAK,YAAY,KAAK,IAAI,EAC7C,OAAA,iBAAiB,uBAAwB,KAAK,kBAAkB,EAEvE,KAAK,iBAAmB,KAAK,UAAU,KAAK,IAAI,EACzC,OAAA,iBAAiB,UAAW,KAAK,gBAAgB,EAExD,KAAK,gBAAkB,KAAK,SAAS,KAAK,IAAI,EACvC,OAAA,iBAAiB,SAAU,KAAK,eAAe,EAEjD,KAAA,GAAG,UAAU,IAAI,kBAAkB,EACxC,KAAK,GAAG,cAAc,IAAI,YAAY,iBAAkB,CACtD,QAAS,GACT,OAAQ,CAAE,UAAW,IAAK,CAC3B,CAAA,CAAC,CACJ,CAEa,QAASC,EAAoB,GAAsB,QAAAT,EAAA,sBAE9D,MAAMU,EAAW,KAAK,KAAK,OAAO,CAACC,EAAeT,KAC5CS,EAAA,KAAKT,EAAI,IAAI,EACVS,GACN,CAAE,CAAA,EAGL,UAAW7B,KAAQ4B,EACZ,KAAK,OAAO5B,CAAI,IAEf,MAAA,KAAK,UAAUA,EAAM2B,CAAiB,GAI9C,YAAK,GAAG,UAAU,OAAO,YAAa,kBAAkB,EACnD,KAAA,UAAU,UAAU,OAAO,oBAAoB,EAG7C,OAAA,oBAAoB,uBAAwB,KAAK,kBAAkB,EACnE,OAAA,oBAAoB,UAAW,KAAK,gBAAgB,EACpD,OAAA,oBAAoB,SAAU,KAAK,eAAe,EAEzD,KAAK,GAAG,cAAc,IAAI,YAAY,sBAAuB,CAC3D,QAAS,GACT,OAAQ,CAAE,UAAW,IAAK,CAC3B,CAAA,CAAC,EAEK,QAAQ,QAAQ,IAAI,CAC7B,GAEO,OAAQ3B,EAA0B,CACvC,OAAO,KAAK,KAAK,QAAa8B,EAAK,OAAS9B,CAAI,GAAK,IACvD,CAEQ,YAA0B,CACzB,OAAA,KAAK,KAAK,KAAK8B,GAAQA,EAAK,OAAO,IAAM,EAAI,GAAK,IAC3D,CAEO,OAAQ9B,EAAc+B,EAAmC,GAAS,OACnE,GAAA,CAAC/B,GAAQ,OAAOA,GAAS,SAAgB,MAAA,IAAIH,EAAe,sBAAsB,EAClF,GAAA,KAAK,OAAOG,CAAI,EAAS,MAAA,IAAIH,EAAe,kBAAkBG,uBAA0B,EAGtF,MAAAoB,EAAM,IAAIf,EAAIL,EAAMgC,IAAA,GACrB,KAAK,mBACLD,EACJ,EAGG,GAAAX,EAAI,GAAG,gBAAkB,KAAK,GAAI,MAAM,IAAIvB,EAAe,mBAAmBuB,EAAI,4DAA4D,EAGlJ,OAAAZ,EAAA,KAAK,YAAL,MAAAA,EAAgB,YAAYY,EAAI,WAAW,IAC3CA,EAAI,WAAW,GAAG,iBAAiB,QAAS,IAAM,CAC5CA,EAAI,YAAc,IAEtB,KAAK,MAAM,CAAA,CACZ,EAEI,KAAA,KAAK,KAAKA,CAAG,EAElB,KAAK,GAAG,cAAc,IAAI,YAAY,sBAAuB,CAC3D,QAAS,GACT,OAAQ,CAAE,IAAAA,CAAI,CACf,CAAA,CAAC,EAEKA,CACT,CAEa,UAAWpB,EAAca,EAAgB,GAAsB,QAAAK,EAAA,sBACtE,GAAA,CAAClB,GAAQ,OAAOA,GAAS,SAAgB,MAAA,IAAIH,EAAe,sBAAsB,EAEhF,MAAAuB,EAAM,KAAK,OAAOpB,CAAI,EAC5B,GAAI,CAACoB,EAAW,MAAA,IAAIvB,EAAe,kBAAkBG,kBAAqB,EAEtE,KAAK,eAAiBoB,IAAK,MAAM,KAAK,SAE1CA,EAAI,QAAQP,CAAa,EAEzB,MAAMoB,EAAW,KAAK,KAAK,UAAkBH,GAAAA,EAAK,OAAS9B,CAAI,EAC1D,YAAA,KAAK,OAAOiC,EAAU,CAAC,EAE5B,KAAK,GAAG,cAAc,IAAI,YAAY,wBAAyB,CAC7D,QAAS,GACT,OAAQ,CAAE,KAAAjC,CAAK,CAChB,CAAA,CAAC,EAEK,QAAQ,QAAQ,IAAI,CAC7B,GAEc,QAASA,EAA6C,QAAAkB,EAAA,sBAC5D,MAAAE,EAAM,KAAK,OAAOpB,CAAI,EAC5B,GAAI,CAACoB,EAAK,OAAO,QAAQ,OAAO,IAAIvB,EAAe,gBAAgBG,IAAO,CAAC,EACvE,GAAAoB,EAAI,WAAa,GAAa,OAAA,QAAQ,QAAQA,CAAG,EAG/C,MAAAc,EAAU,KAAK,aAErB,OAAIA,IACF,MAAM,KAAK,SAASA,EAAQ,KAAM,EAAI,EAChC,MAAAxC,EAAM,KAAK,aAAa,GAG3B,KAAA,GAAG,UAAU,IAAI,iBAAiB,EAClC,KAAA,UAAU,aAAa,cAAe,MAAM,EACjD,KAAK,aAAa0B,CAAG,EAEdA,EAAI,MACb,GAEa,KAAMpB,EAAcmC,EAAmD,QAAAjB,EAAA,sBAClF,MAAMkB,EAAK,SACL,aAAA,KAAK,MAAM,KAAKA,CAAE,EAGxB,KAAK,mBAAqBD,EAEnB,KAAK,QAAQnC,CAAI,EAAE,QAAQ,IAAM,CACjC,KAAA,MAAM,IAAIoC,CAAE,CAAA,CAClB,CACH,GAEc,SAAUpC,EAAeqC,EAAY,GAA4B,QAAAnB,EAAA,sBAC7E,MAAME,EAAMpB,EAAO,KAAK,OAAOA,CAAI,EAAI,KAAK,aAC5C,MAAI,CAACoB,GAAO,CAACA,EAAI,OAAO,EAAU,QAAQ,QAAQ,IAAI,GAEtD,KAAK,aAAaA,CAAG,EACrB,MAAMA,EAAI,QAINiB,IAAc,KACX,KAAA,GAAG,UAAU,OAAO,iBAAiB,EACrC,KAAA,UAAU,aAAa,cAAe,OAAO,GAG7C,QAAQ,QAAQjB,CAAG,EAC5B,GAEa,MAAOpB,EAAoC,QAAAkB,EAAA,sBACtD,MAAMkB,EAAK,SACL,aAAA,KAAK,MAAM,KAAKA,CAAE,EAEjB,KAAK,SAASpC,CAAI,EAAE,QAAQ,IAAM,CAClC,KAAA,MAAM,IAAIoC,CAAE,EAGb,KAAK,oBACP,KAAK,mBAAmB,QACxB,KAAK,mBAAqB,MAE1B,KAAK,UAAU,OACjB,CACD,CACH,GAEa,OAAQpC,EAAcmC,EAAmE,QAAAjB,EAAA,sBAC9F,MAAAE,EAAM,KAAK,OAAOpB,CAAI,EAC5B,OAAKoB,EAEGA,EAAI,WAAa,GAAQ,KAAK,MAAU,EAAA,KAAK,KAAKpB,EAAMmC,CAAM,EAFrD,QAAQ,OAAO,IAAItC,EAAe,gBAAgBG,IAAO,CAAC,CAG7E,GAEO,eAAgBM,EAAuC,GAAiB,CACvE,MAAAgC,EAAc,IAAInB,EAAYb,CAAO,EACtC,YAAA,iBAAiB,KAAKgC,CAAW,EAE/BA,CACT,CAEQ,aAAclB,EAAgC,CACpD,GAAI,CAACA,GAAO,CAAC,KAAK,iBAAiB,OAAQ,OAAO,KAAK,iBAEjD,MAAAC,EAAaD,EAAI,gBAEZ,UAAAU,KAAQ,KAAK,iBACjBA,EAAA,KAAKV,EAAKC,CAAU,EAG3B,OAAO,KAAK,gBACd,CAEQ,aAAcD,EAAgC,CACpD,GAAI,CAACA,GAAO,CAAC,KAAK,iBAAiB,OAAQ,OAAO,KAAK,iBAEjD,MAAAC,EAAaD,EAAI,gBAEZ,UAAAU,KAAQ,KAAK,iBACtBA,EAAK,KAAKT,CAAU,EAGtB,OAAO,KAAK,gBACd,CAEQ,aAAqB,CACtB,KAAA,aAAa,KAAK,WAAY,CAAA,CACrC,CAEQ,UAAWkB,EAA4B,CACzC,GAAAA,EAAM,MAAQ,SAAU,CACpB,MAAAL,EAAU,KAAK,aACjB,GAAA,CAACA,GAAWA,EAAQ,YAAc,GAAM,OAE5C,KAAK,MAAM,EAEf,CAEQ,UAAkB,CACxB,KAAK,eAAe,CACtB,CACF"}