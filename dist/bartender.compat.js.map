{"version":3,"sources":["bartender.compat.js"],"names":["Bartender","options","window","CustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","debug","overlay","closeOnOverlayClick","closeOnEsc","trapFocus","scrollTop","mainWrapSelector","contentWrapSelector","focusableElementSelector","readyClass","openClass","currentOpenBar","previousOpenButton","resizeTimeout","bars","openButtons","closeButtons","toggleButtons","pushElements","validBarPositions","validModes","contentWrapMutationObserver","init","text","console","log","error","elements","startTime","performance","now","iterationCount","i","length","element","matches","getAttribute","setAttribute","endTime","removeAttribute","position","indexOf","mainWrap","querySelector","classList","add","contentWrap","querySelectorAll","addBar","button","isValidPosition","logError","join","addEventListener","open","toggle","close","createElement","appendChild","key","keyCode","clearTimeout","setTimeout","setPush","MutationObserver","mutationsList","mutation","type","addedNodes","disableFocus","observe","attributes","childList","subtree","newElement","style","transition","mode","newBar","mutationObserver","removeElement","removeChild","bar","enableFocus","focus","showOverlay","dispatchEvent","enableFocusOfContentWrap","hideOverlay","removeProperty","remove","transform","overflow","offsetWidth","offsetHeight","contains"],"mappings":"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","sourcesContent":["'use strict'\n\n/**\n * Class for creating accessible off-canvas bars.\n */\nclass Bartender {\n\n  /**\n   * @param {object} options - User defined options\n   */\n  constructor (options) {\n    // Polyfill custom events\n    if (typeof window.CustomEvent !== 'function') {\n      window.CustomEvent = function (event, params) {\n        params = params || {\n          bubbles: false,\n          cancelable: false,\n          detail: null,\n        }\n\n        var evt = document.createEvent('CustomEvent')\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n        return evt\n      }\n    }\n\n    // Apply user configuration\n    this.options = Object.assign({\n      // Debug mode\n      debug: false,\n\n      // Show shading overlay over content wrapper when bar is open?\n      overlay: true,\n\n      // Close open bar by clicking the overlay?\n      closeOnOverlayClick: true,\n\n      // Close open bar with escape key?\n      closeOnEsc: true,\n\n      // Trap focus to the open bar?\n      trapFocus: false,\n\n      // Scroll bar to the top when opening it?\n      scrollTop: true,\n\n      // Selector to find main wrapper\n      mainWrapSelector: '.bartender-main',\n\n      // Selector to find content wrapper\n      contentWrapSelector: '.bartender-content',\n\n      // Selector for focusable elements\n      focusableElementSelector: '[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])',\n\n      // Classes\n      readyClass: 'bartender-ready',\n      openClass: 'bartender-open',\n    }, options)\n\n    // Overlay element\n    this.overlay = null\n\n    // Currently open bar\n    this.currentOpenBar = null\n\n    // Button which was previously used to open the bar\n    this.previousOpenButton = null\n\n    // Window resize timeout\n    this.resizeTimeout = null\n\n    // Object for storing the bars\n    this.bars = {}\n\n    // Arrays for storing buttons\n    this.openButtons = []\n    this.closeButtons = []\n    this.toggleButtons = []\n\n    // Array for storing pushable elements\n    // These elements will be moved when bar with \"push\" or \"reveal\" mode is being opened.\n    this.pushElements = []\n\n    // Valid bar positions\n    this.validBarPositions = [\n      'left',\n      'right',\n      'top',\n      'bottom',\n    ]\n\n    // Valid bar modes\n    this.validModes = [\n      'float',\n      'push',\n      'reveal',\n    ]\n\n    // Mutation observer for content wrap\n    this.contentWrapMutationObserver = null\n\n    // Run initializer\n    this.init()\n  }\n\n  /**\n   * Log to console\n   *\n   * @param {string} text - Text to log\n   * @returns {void}\n   */\n  log (text = '') {\n    console.log('Bartender: ' + text)\n  }\n\n  /**\n   * Log error to console\n   *\n   * @param {string} text - Text to log\n   * @returns {void}\n   */\n  logError (text = '') {\n    console.error('Bartender: ' + text)\n  }\n\n  /**\n   * Log debug message to console\n   *\n   * @param {string} text - Text to log\n   * @returns {void}\n   */\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Bartender debug: ' + text)\n  }\n\n  /**\n   * Disable focus of elements\n   *\n   * @param {array} Array of DOM elements\n   * @returns {void}\n   */\n  disableFocus (elements = []) {\n    const startTime = performance.now()\n\n    let iterationCount = 0\n\n    for (let i = 0; i < elements.length; i++) {\n      let element = elements[i]\n\n      // Discard element if it's not focusable, or if it's already disabled\n      if (typeof element.matches !== 'function' || !element.matches(this.options.focusableElementSelector) || element.getAttribute('data-bartender-prevtabindex')) continue\n\n      element.setAttribute('data-bartender-prevtabindex', element.getAttribute('tabindex'))\n      element.setAttribute('tabindex', '-1')\n\n      iterationCount++\n    }\n\n    const endTime = performance.now()\n\n    if (iterationCount > 0) {\n      this.debug('Disabled focus of ' + iterationCount + ' elements in ' + (endTime - startTime))\n    }\n  }\n\n  /**\n   * Enable focus of elements\n   *\n   * @param {array} Array of DOM elements\n   * @returns {void}\n   */\n  enableFocus (elements = []) {\n    const startTime = performance.now()\n\n    let iterationCount = 0\n\n    for (let i = 0; i < elements.length; i++) {\n      let element = elements[i]\n\n      // If element has previous tabindex marked, return it. Otherwise just remove tabindex attribute.\n      if (element.getAttribute('data-bartender-prevtabindex') != 'null') {\n        element.setAttribute('tabindex', element.getAttribute('data-bartender-prevtabindex'))\n      } else {\n        element.removeAttribute('tabindex')\n      }\n\n      element.removeAttribute('data-bartender-prevtabindex')\n\n      iterationCount++\n    }\n\n    const endTime = performance.now()\n\n    if (iterationCount > 0) {\n      this.debug('Enabled focus of ' + iterationCount + ' elements in ' + (endTime - startTime))\n    }\n  }\n\n  /**\n   * Is defined bar position valid?\n   *\n   * @param {string} position - Position to validate\n   * @returns {boolean}\n   */\n  isValidPosition (position = null) {\n    return this.validBarPositions.indexOf(position) >= 0\n  }\n\n  /**\n   * Initialize Bartender\n   *\n   * @returns {object} Bartender instance\n   */\n  init () {\n    try {\n      // Main wrap\n      this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n      this.mainWrap.classList.add('bartender-main')\n\n      // Content wrap\n      this.contentWrap = this.mainWrap.querySelector(this.options.contentWrapSelector)\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n      this.contentWrap.classList.add('bartender-content')\n      this.contentWrap.setAttribute('tabindex', '-1')\n\n      // Find buttons\n      this.openButtons = this.mainWrap.querySelectorAll('[data-bartender-open]')\n      this.closeButtons = this.mainWrap.querySelectorAll('[data-bartender-close]')\n      this.toggleButtons = this.mainWrap.querySelectorAll('[data-bartender-toggle]')\n\n      // Find bars\n      const bars = this.mainWrap.querySelectorAll('[data-bartender-bar]')\n\n      for (let i = 0; i < bars.length; i++) {\n        this.addBar(bars[i])\n      }\n\n      // Open buttons\n      for (let i = 0; i < this.openButtons.length; i++) {\n        let button = this.openButtons[i]\n        let position = button.getAttribute('data-bartender-open')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: ' + this.validBarPositions.join(', '))\n          return\n        }\n\n        button.setAttribute('aria-expanded', 'false')\n        button.addEventListener('click', () => {\n          this.open(position, button)\n        })\n      }\n\n      // Toggle buttons\n      for (let i = 0; i < this.toggleButtons.length; i++) {\n        let button = this.toggleButtons[i]\n        let position = button.getAttribute('data-bartender-toggle')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Toggle button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: ' + this.validBarPositions.join(', '))\n          return\n        }\n\n        button.setAttribute('aria-expanded', 'false')\n        button.addEventListener('click', () => {\n          this.toggle(position, button)\n        })\n      }\n\n      // Close buttons\n      for (let i = 0; i < this.closeButtons.length; i++) {\n        let button = this.closeButtons[i]\n\n        button.addEventListener('click', () => {\n          this.close()\n        })\n      }\n\n      // Find pushable elements\n      this.pushElements = this.mainWrap.querySelectorAll('[data-bartender-push]')\n\n      if (this.pushElements.length) this.debug('Registered ' + this.pushElements.length + ' pushable elements.')\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('bartender-overlay')\n\n        if (this.options.closeOnOverlayClick === true) {\n          this.overlay.addEventListener('click', () => this.close())\n        }\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      // Enable closing the bar with escape key\n      if (this.options.closeOnEsc) {\n        window.addEventListener('keydown', event => {\n          let key = event.key || event.keyCode\n\n          if (key === 'Escape' || key === 'Esc' || key === 27) {\n            this.close()\n          }\n        })\n      }\n\n      // Adjust content wrapper transform when window is resized\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeTimeout)\n\n        this.resizeTimeout = setTimeout(() => {\n          this.setPush()\n        }, 200)\n      })\n\n      // Add mutation observer for content wrapper\n      if (this.options.trapFocus === true) {\n        this.contentWrapMutationObserver = new MutationObserver((mutationsList) => {\n          if (!this.currentOpenBar) return\n\n          for (let i = 0; i < mutationsList.length; i++) {\n            let mutation = mutationsList[i]\n\n            if (mutation.type === 'childList') {\n              if (mutation.addedNodes && mutation.addedNodes.length) {\n                this.disableFocus(mutation.addedNodes)\n              }\n            }\n          }\n        })\n\n        this.contentWrapMutationObserver.observe(this.contentWrap, {\n          attributes: false,\n          childList: true,\n          subtree: true,\n        })\n      }\n\n      // Add class to the main wrap\n      this.mainWrap.classList.add(this.options.readyClass)\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  /**\n   * Add a new off-canvas bar\n   *\n   * @param {object} element - DOM element. If undefined, the element will be created.\n   * @param {object} options - Bar options\n   * @returns {object} Added bar instance\n   */\n  addBar (element = null, options = {}) {\n    try {\n      // If element doesn't exist, create it\n      let newElement = false\n\n      if (element === null) {\n        newElement = true\n        element = document.createElement('div')\n      }\n\n      // Initially remove transition\n      element.style.transition = 'none'\n\n      // Get bar configuration\n      let position = options.position || element.getAttribute('data-bartender-bar')\n      let mode = options.mode || element.getAttribute('data-bartender-bar-mode')\n\n      // If mode is not specified, fall back to 'float'\n      mode = mode || 'float'\n\n      // Validate configuration\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: ' + this.validBarPositions.join(', ')\n      if (this.validModes.indexOf(mode) < 0) throw 'Invalid mode \\'' + mode + '\\' for bar \\'' + position + '\\'. Use one of the following values: ' + this.validModes.join(', ')\n      if (this.bars[position]) throw 'Bar with position \\'' + position + '\\' is already defined'\n\n      // Initially disable focus of the bar and it's child elements\n      element.setAttribute('tabindex', '-1')\n      element.setAttribute('aria-hidden', 'true')\n      this.disableFocus(element.querySelectorAll(this.options.focusableElementSelector))\n\n      // Set data-attributes\n      element.setAttribute('data-bartender-bar', position)\n      element.setAttribute('data-bartender-bar-mode', mode)\n\n      // If element is new, append to main container\n      if (newElement === true) this.mainWrap.appendChild(element)\n\n      // Return transition\n      setTimeout(() => {\n        element.style.transition = null\n      })\n\n      // Create new bar object\n      const newBar = {\n        element: element,\n        position: position,\n        mode: mode,\n        mutationObserver: new MutationObserver((mutationsList) => {\n          if (this.currentOpenBar && this.currentOpenBar.position === position) return\n\n          for (let i = 0; i < mutationsList.length; i++) {\n            let mutation = mutationsList[i]\n\n            if (mutation.type === 'childList') {\n              if (mutation.addedNodes && mutation.addedNodes.length) {\n                this.disableFocus(mutation.addedNodes)\n              }\n            }\n          }\n        }),\n      }\n\n      newBar.mutationObserver.observe(newBar.element, {\n        attributes: false,\n        childList: true,\n        subtree: true,\n      })\n\n      this.bars[position] = newBar\n\n      this.debug('Added bar \\'' + position + '\\' with mode \\'' + mode + '\\'')\n\n      return newBar\n    } catch (error) {\n      this.logError(error)\n\n      return null\n    }\n  }\n\n  /**\n   * Remove bar\n   *\n   * @param {string} position - Bar position to remove\n   * @param {boolean} removeElement - Remove DOM element?\n   * @returns {void}\n   */\n  removeBar (position = null, removeElement = true) {\n    try {\n      // If this bar is currently open, close it first\n      if (this.currentOpenBar && this.currentOpenBar.position === position) {\n        this.close()\n      }\n\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: ' + this.validBarPositions.join(', ')\n      if (!this.bars[position]) throw 'Bar with position \\'' + position + '\\' doesn\\'t exist'\n\n      if (removeElement === true) {\n        this.mainWrap.removeChild(this.bars[position].element)\n      }\n\n      delete this.bars[position]\n\n      this.debug('Removed bar with position \\'' + position + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n  }\n\n  /**\n   * Open off-canvas bar\n   *\n   * @param {string} position - Bar position\n   * @param {object} button - Button which was used to run this method\n   * @returns {object} Opened bar instance\n   */\n  open (position = '', button = null) {\n    try {\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: ' + this.validBarPositions.join(', ')\n\n      // Get bar instance\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined.'\n\n      // Close other bars\n      if (this.currentOpenBar) {\n        this.close(false)\n      } else if (this.options.trapFocus === true) {\n        this.disableFocus(this.contentWrap.querySelectorAll(this.options.focusableElementSelector))\n      }\n\n      this.contentWrap.setAttribute('aria-hidden', 'true')\n\n      this.debug('Opening bar \\'' + position + '\\'')\n\n      // Mark this bar as open\n      this.currentOpenBar = bar\n      bar.element.classList.add('bartender-bar--open')\n\n      // Scroll to top\n      if (this.options.scrollTop) {\n        bar.element.scrollTop = 0\n      }\n\n      // Focus on bar\n      bar.element.removeAttribute('aria-hidden')\n      this.enableFocus(bar.element.querySelectorAll('[data-bartender-prevtabindex]'))\n      bar.element.focus()\n\n      // Push elements\n      this.setPush()\n\n      // Remember the button which was used to open the bar\n      this.previousOpenButton = button\n\n      // Set ARIA attributes of the button\n      if (button) button.setAttribute('aria-expanded', true)\n\n      // Show overlay\n      this.showOverlay()\n\n      // Add class to the main element\n      this.mainWrap.classList.add(this.options.openClass)\n\n      // Dispatch event\n      this.mainWrap.dispatchEvent(new CustomEvent('bartender-open', {\n        bubbles: true,\n        detail: {\n          bar: bar,\n          button: button,\n        },\n      }))\n\n      return bar\n    } catch (error) {\n      this.logError(error)\n    }\n  }\n\n  /**\n   * Toggle off-canvas bar\n   *\n   * @param {string} position - Bar position\n   * @param {object} button - Button which was used to run this method\n   * @returns {object} Toggled bar instance\n   */\n  toggle (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: ' + this.validBarPositions.join(', ')\n\n      if (this.currentOpenBar && this.currentOpenBar.position == position) {\n        return this.close()\n      } else {\n        this.close()\n        return this.open(position, button)\n      }\n    } catch (error) {\n      this.logError(error)\n    }\n  }\n\n  /**\n   * Close any open off-canvas bar\n   *\n   * @param {boolean} enableFocusOfContentWrap - Enable focus of content wrap\n   * @returns {object} Closed bar\n   */\n  close (enableFocusOfContentWrap = true) {\n    try {\n      if (!this.currentOpenBar) return\n\n      let bar = this.bars[this.currentOpenBar.position]\n\n      this.debug('Closing bar \\'' + bar.position + '\\'')\n\n      // Dispatch event\n      this.mainWrap.dispatchEvent(new CustomEvent('bartender-close', {\n        bubbles: true,\n        detail: {\n          bar: bar,\n        },\n      }))\n\n      // Hide overlay\n      this.hideOverlay()\n\n      // Remove transform from wrapper element\n      this.contentWrap.style.removeProperty('transform')\n\n      // Remove transforms from pushable elements\n      for (let i = 0; i < this.pushElements.length; i++) {\n        this.pushElements[i].style.removeProperty('transform')\n      }\n\n      // Disable focus of bar element\n      this.disableFocus(bar.element.querySelectorAll(this.options.focusableElementSelector))\n      bar.element.setAttribute('tabindex', '-1')\n      bar.element.setAttribute('aria-hidden', 'true')\n\n      // Enable focus on content element\n      this.contentWrap.removeAttribute('aria-hidden')\n\n      if (this.options.trapFocus === true && enableFocusOfContentWrap === true) {\n        this.enableFocus(this.contentWrap.querySelectorAll('[data-bartender-prevtabindex]'))\n      }\n\n      // Close the bar\n      bar.element.classList.remove('bartender-bar--open')\n      this.currentOpenBar = null\n\n      // Restore scrolling to the main wrap\n      this.mainWrap.style.removeProperty('overflow')\n\n      // Remove class from the main wrap\n      this.mainWrap.classList.remove(this.options.openClass)\n\n      // Focus open button which was used to open the bar\n      if (this.previousOpenButton && this.previousOpenButton.getAttribute('tabindex') >= 0) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton.setAttribute('aria-expanded', 'false')\n        this.previousOpenButton = null\n      } else if (enableFocusOfContentWrap === true) {\n        // Bar was closed using keyboard or API. Focus on content wrapper instead.\n        this.contentWrap.focus()\n      }\n\n      return bar\n    } catch (error) {\n      this.logError(error)\n    }\n  }\n\n  /**\n   * Set transforms for pushable elements\n   *\n   * @returns {void}\n   */\n  setPush () {\n    if (!this.currentOpenBar || !this.currentOpenBar.mode) return\n\n    let transform = null\n\n    // Hide overflow of main wrapper\n    // This has to be done first in order to get correct width/height\n    this.mainWrap.style.overflow = 'hidden'\n\n    switch (this.currentOpenBar.position) {\n      case 'left':\n        transform = 'translateX(' + this.currentOpenBar.element.offsetWidth + 'px)'\n        break\n\n      case 'right':\n        transform = 'translateX(-' + this.currentOpenBar.element.offsetWidth + 'px)'\n        break\n\n      case 'top':\n        transform = 'translateY(' + this.currentOpenBar.element.offsetHeight + 'px)'\n        break\n\n      case 'bottom':\n        transform = 'translateY(-' + this.currentOpenBar.element.offsetHeight + 'px)'\n        break\n    }\n\n    if ([\n      'push',\n      'reveal',\n    ].indexOf(this.currentOpenBar.mode) >= 0) {\n      // Transform content wrapper\n      this.contentWrap.style.transform = transform\n    }\n\n    // Transform other pushable elements\n    for (let i = 0; i < this.pushElements.length; i++) {\n      this.pushElements[i].style.transform = transform\n    }\n  }\n\n  /**\n   * Show shading overlay\n   *\n   * @returns {void}\n   */\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('bartender-overlay--visible')) return\n\n    this.overlay.classList.add('bartender-overlay--visible')\n  }\n\n  /**\n   * Hide shading overlay\n   *\n   * @returns {void}\n   */\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('bartender-overlay--visible')) return\n\n    this.overlay.classList.remove('bartender-overlay--visible')\n  }\n}\n"],"file":"bartender.compat.js"}