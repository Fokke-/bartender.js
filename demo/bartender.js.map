{"version":3,"sources":["bartender.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","Bartender","options","debug","overlay","closeOnEsc","mainWrapSelector","contentWrapSelector","readyClass","openClass","currentOpenBar","previousOpenButton","resizeTimeout","bars","openButtons","closeButtons","toggleButtons","pushElements","init","value","text","undefined","console","log","error","button","bar","_this","mainWrap","document","querySelector","contentWrap","querySelectorAll","classList","add","_a","_i","addBar","keys","_a2","_f2","position","getAttribute","isValidPosition","setAttribute","addEventListener","event","open","indexOf","keyCode","logError","_i2","_a3","_f3","toggle","_i3","_a4","_i4","close","createElement","preventDefault","appendChild","window","clearTimeout","setTimeout","setPush","newBar","BartenderBar","element","mode","join","contains","enableFocus","showOverlay","dispatchEvent","CustomEvent","detail","disableFocus","remove","focus","style","removeProperty","_a5","_i5","hideOverlay","transform","overflow","offsetWidth","offsetHeight","_a6","_i6","focusableElementSelector","_a7","_i7","_a8","_i8","removeAttribute"],"mappings":"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","file":"bartender.js","sourcesContent":["'use strict';\n\nclass Bartender {\n\n  constructor (options) {\n    // Apply user configuration\n    this.options = Object.assign({\n      // Debug mode\n      debug: false,\n\n      // Show shading overlay over content wrapper when bar is open?\n      overlay: true,\n\n      // Close open bar with escape key?\n      closeOnEsc: true,\n\n      // Selector to find main wrapper\n      mainWrapSelector: '.bartender-main',\n\n      // Selector to find content wrapper\n      contentWrapSelector: '.bartender-content',\n\n      // Classes\n      readyClass: 'bartender-ready',\n      openClass: 'bartender-open',\n    }, options)\n\n    // Overlay element\n    this.overlay = null\n\n    // Currently open bar\n    this.currentOpenBar = null\n\n    // Button which was previously used to open the bar\n    this.previousOpenButton = null\n\n    // Window resize timeout\n    this.resizeTimeout = null\n\n    // Object for storing the bars\n    this.bars = {}\n\n    // Arrays for storing buttons\n    this.openButtons = []\n    this.closeButtons = []\n    this.toggleButtons = []\n\n    // Array for storing pushable elements\n    // These elements will be moved when bar with \"push\" mode is being opened.\n    this.pushElements = []\n\n    // Run initializer\n    this.init()\n  }\n\n  // Logging function\n  log (text = '') {\n    console.log('Bartender: ' + text)\n  }\n\n  // Error logging function\n  logError (text = '') {\n    console.error('Bartender: ' + text)\n  }\n\n  // Debug logging function\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Bartender debug: ' + text)\n  }\n\n  // Initializer\n  init () {\n    try {\n      // Find and validate required elements\n      this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n\n      this.contentWrap = this.mainWrap.querySelector(this.options.contentWrapSelector)\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n\n      // Find buttons\n      this.openButtons = this.mainWrap.querySelectorAll('[data-bartender-open]')\n      this.closeButtons = this.mainWrap.querySelectorAll('[data-bartender-close]')\n      this.toggleButtons = this.mainWrap.querySelectorAll('[data-bartender-toggle]')\n\n      // Add classes\n      this.mainWrap.classList.add('bartender-main')\n      this.contentWrap.classList.add('bartender-content')\n\n      // Find bars\n      this.mainWrap.querySelectorAll('[data-bartender-bar]').forEach(bar => {\n        this.addBar(bar)\n      })\n\n      // Check that there's at least one bar defined\n      if (!Object.keys(this.bars).length) throw 'Cannot find any bars.'\n\n      // Open buttons\n      this.openButtons.forEach(button => {\n        let position = button.getAttribute('data-bartender-open')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        // Add ARIA attributes\n        button.setAttribute('aria-expanded', 'false')\n\n        // Event listeners for open buttons\n        button.addEventListener('click', event => {\n          this.open(position, button)\n        })\n\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            this.open(position, button)\n          }\n        })\n      })\n\n      // Toggle buttons\n      this.toggleButtons.forEach(button => {\n        let position = button.getAttribute('data-bartender-toggle')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Toggle button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        // Add ARIA attributes\n        button.setAttribute('aria-expanded', 'false')\n\n        // Event listeners for toggle buttons\n        button.addEventListener('click', event => {\n          this.toggle(position, button)\n        })\n\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            this.toggle(position, button)\n          }\n        })\n      })\n\n      // Close buttons\n      this.closeButtons.forEach(button => {\n        // Event listeners for close buttons\n        button.addEventListener('click', event => {\n          this.close()\n        })\n\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            this.close()\n          }\n        })\n      })\n\n      // Find pushable elements\n      this.pushElements = this.mainWrap.querySelectorAll('[data-bartender-push]')\n\n      if (this.pushElements.length) this.debug('Registered ' + this.pushElements.length + ' pushable elements.')\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('bartender-overlay')\n        this.overlay.addEventListener('click', () => this.close())\n        this.overlay.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      // Enable closing the bar with escape key\n      if (this.options.closeOnEsc) {\n        window.addEventListener('keydown', event => {\n          if (event.keyCode === 27) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      }\n\n      // Adjust content wrapper transform when window is resized\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeTimeout)\n\n        this.resizeTimeout = setTimeout(() => {\n          this.setPush()\n        }, 200)\n      })\n\n      // Add class\n      this.mainWrap.classList.add(this.options.readyClass)\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  isValidPosition (position = null) {\n    return ['left', 'right', 'top', 'bottom'].indexOf(position) >= 0\n  }\n\n  addBar (bar) {\n    try {\n      // Get bar configuration\n      var position = bar.getAttribute('data-bartender-bar')\n\n      // Validate required elements\n      if (!this.mainWrap || !this.contentWrap) return this\n\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      // Check that bar is not already defined\n      if (this.bars[position]) throw 'Duplicate bar with position \\'' + position + '\\''\n\n      // Create new bar object\n      const newBar = new BartenderBar()\n      newBar.element = bar\n      newBar.init()\n\n      // Insert new bar\n      this.bars[position] = newBar\n\n      this.debug('Added bar \\'' + position + '\\' with mode \\'' + newBar.mode + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  open (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined. Use one of the following: ' + Object.keys(this.bars).join(', ') + '.'\n      if (bar.element.classList.contains('bartender-bar--open')) return\n\n      // Close other bars\n      this.close()\n\n      // Open bar\n      this.debug('Opening bar \\'' + position + '\\'')\n      bar.enableFocus()\n      bar.element.classList.add('bartender-bar--open')\n\n      // Mark this bar as open\n      this.currentOpenBar = bar\n\n      // Push elements\n      this.setPush()\n\n      // Add class to the main wrap\n      this.mainWrap.classList.add(this.options.openClass)\n\n      // Remember the button which was used to open off-canvas\n      this.previousOpenButton = button\n\n      // Set ARIA attributes of the button\n      if (button) button.setAttribute('aria-expanded', true)\n\n      // Show overlay\n      this.showOverlay()\n\n      // Dispatch event\n      this.mainWrap.dispatchEvent(new CustomEvent('open', {\n        detail: {\n          bar: bar,\n          button: button,\n        }\n      }))\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  toggle (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      if (this.currentOpenBar && this.currentOpenBar.position == position) {\n        this.close()\n      } else {\n        this.close()\n        this.open(position, button)\n      }\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  close () {\n    try {\n      if (!this.currentOpenBar) return\n\n      // Close bar\n      this.debug('Closing bar \\'' + this.currentOpenBar.position + '\\'')\n      this.currentOpenBar.disableFocus()\n      this.currentOpenBar.element.classList.remove('bartender-bar--open')\n\n      // Focus open button which was used to open the bar\n      if (this.previousOpenButton) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton.setAttribute('aria-expanded', 'false')\n        this.previousOpenButton = null\n      }\n\n      // Remove transforms from wrapper elements\n      this.contentWrap.style.removeProperty('transform')\n      this.mainWrap.style.removeProperty('overflow')\n\n      // Remove transforms from pushable elements\n      this.pushElements.forEach(el => {\n        el.style.removeProperty('transform')\n      })\n\n      // Remove class from the main wrap\n      this.mainWrap.classList.remove(this.options.openClass)\n\n      // Hide overlay\n      this.hideOverlay()\n\n      // Dispatch event\n      this.mainWrap.dispatchEvent(new CustomEvent('close', {\n        detail: {\n          bar: this.currentOpenBar,\n        }\n      }))\n\n      this.currentOpenBar = null\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  setPush () {\n    if (!this.currentOpenBar) return\n    if (!this.currentOpenBar.mode) return\n\n    var transform = null\n\n    // Hide overflow of main wrapper\n    // This has to be done first in order to get correct width/height\n    this.mainWrap.style.overflow = 'hidden'\n\n    switch (this.currentOpenBar.position) {\n      case 'left':\n        transform = 'translateX(' + this.currentOpenBar.element.offsetWidth + 'px)'\n        break\n\n      case 'right':\n        transform = 'translateX(-' + this.currentOpenBar.element.offsetWidth + 'px)'\n        break\n\n      case 'top':\n        transform = 'translateY(' + this.currentOpenBar.element.offsetHeight + 'px)'\n        break\n\n      case 'bottom':\n        transform = 'translateY(-' + this.currentOpenBar.element.offsetHeight + 'px)'\n        break\n    }\n\n    if (['push', 'slide'].indexOf(this.currentOpenBar.mode) >= 0) {\n      // Transform content wrapper\n      this.contentWrap.style.transform = transform\n    }\n\n    // Transform other pushable elements\n    this.pushElements.forEach(el => {\n      el.style.transform = transform\n    })\n  }\n\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('bartender-overlay--visible')) return\n\n    this.debug('Showing overlay')\n\n    this.overlay.classList.add('bartender-overlay--visible')\n  }\n\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('bartender-overlay--visible')) return\n\n    this.debug('Hiding overlay')\n\n    this.overlay.classList.remove('bartender-overlay--visible')\n  }\n}\n\nclass BartenderBar {\n\n  constructor() {\n    this.element = null\n    this.position = null\n    this.mode = 'float'\n    this.focusableElementSelector = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n  }\n\n  init () {\n    // Check that defined bar element exists\n    if (!this.element) throw 'Bar element for \\'' + this.position + '\\' was not found!'\n\n    // Set position\n    this.position = this.element.getAttribute('data-bartender-bar')\n    if (!this.position) throw 'Missing position for bar'\n\n    // Set mode\n    if (this.element.getAttribute('data-bartender-bar-mode')) {\n      this.mode = this.element.getAttribute('data-bartender-bar-mode')\n    }\n\n    // Validate mode\n    if (['float', 'push', 'slide'].indexOf(this.mode) < 0) throw 'Invalid mode \\'' + this.mode + '\\' for bar \\'' + this.position + '\\'. Use one of the following values: float, push, slide.'\n\n    // Disable focus\n    this.disableFocus()\n\n    return this\n  }\n\n  disableFocus () {\n    // Disable focus on bar child elements\n    this.element.querySelectorAll(this.focusableElementSelector).forEach(item => {\n      item.setAttribute('tabindex', '-1')\n    })\n\n    // Disable focus on bar\n    this.element.setAttribute('tabindex', '-1')\n    this.element.setAttribute('aria-hidden', 'true')\n\n    return this\n  }\n\n  enableFocus () {\n    // Enable focus on bar child elements\n    this.element.querySelectorAll(this.focusableElementSelector).forEach(item => {\n      item.removeAttribute('tabindex')\n    })\n\n    // Enable focus on bar\n    this.element.removeAttribute('aria-hidden')\n    this.element.setAttribute('tabindex', '0')\n\n    // Focus on bar\n    this.element.focus()\n\n    return this\n  }\n\n}"]}