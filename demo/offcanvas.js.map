{"version":3,"sources":["offcanvas.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","OffCanvas","options","debug","overlay","mainWrapSelector","contentWrapSelector","openButtonSelector","closeButtonSelector","toggleButtonSelector","currentOpenBar","previousOpenButton","resizeTimeout","bars","left","right","top","bottom","init","value","text","undefined","console","log","error","_this","mainWrap","document","querySelector","contentWrap","openButtons","querySelectorAll","closeButtons","toggleButtons","classList","add","forEach","button","position","getAttribute","isValidPosition","addEventListener","openBar","event","indexOf","keyCode","preventDefault","logError","closeBar","createElement","appendChild","window","clearTimeout","setTimeout","setContentWrapPush","includes","newBar","OffCanvasBar","parentElement","bar","element","contains","open","showOverlay","close","focus","style","transform","overflow","hideOverlay","mode","offsetWidth","offsetHeight","remove","selector","focusableElementSelector","isValidMode","setAttribute","disableFocus","item","removeAttribute","enableFocus"],"mappings":"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","file":"offcanvas.js","sourcesContent":["'use strict';\n\nclass OffCanvas {\n\n  constructor (options) {\n    this.options = Object.assign({\n      debug: false, // Debug mode\n      overlay: true, // Show shading overlay over content wrapper when bar is open?\n      mainWrapSelector: '.offcanvas-main',\n      contentWrapSelector: '.offcanvas-content',\n      openButtonSelector: '.offcanvas-open',\n      closeButtonSelector: '.offcanvas-close',\n      toggleButtonSelector: '.offcanvas-toggle',\n    }, options)\n\n    this.overlay = null\n    this.currentOpenBar = null\n    this.previousOpenButton = null\n    this.resizeTimeout = null\n    this.bars = {\n      left: null,\n      right: null,\n      top: null,\n      bottom: null,\n    }\n\n    this.init()\n  }\n\n  // Logging function\n  log (text = '') {\n    console.log('Off-canvas: ' + text)\n  }\n\n  // Error logging function\n  logError (text = '') {\n    console.error('Off-canvas: ' + text)\n  }\n\n  // Debug logging function\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Off-canvas debug: ' + text)\n  }\n\n  init () {\n    try {\n      // Find and validate required elements\n      this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n\n      this.contentWrap = this.mainWrap.querySelector(this.options.contentWrapSelector)\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n\n      // Find all buttons\n      this.openButtons = this.mainWrap.querySelectorAll(this.options.openButtonSelector)\n      this.closeButtons = this.mainWrap.querySelectorAll(this.options.closeButtonSelector)\n      this.toggleButtons = this.mainWrap.querySelectorAll(this.options.toggleButtonSelector)\n\n      // Add classes\n      this.mainWrap.classList.add('offcanvas-main')\n      this.contentWrap.classList.add('offcanvas-content')\n\n      // Add event listeners for open buttons\n      this.openButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-bar') || 'left'\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.openBar(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) > -1) {\n            event.preventDefault()\n            this.openBar(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for close buttons\n      this.closeButtons.forEach(button => {\n        button.addEventListener('click', () => this.closeBar())\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) > -1) {\n            event.preventDefault()\n            this.closeBar()\n          }\n        })\n      })\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('offcanvas-overlay')\n        this.overlay.addEventListener('click', () => this.closeBar())\n        this.overlay.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) > -1) {\n            event.preventDefault()\n            this.closeBar()\n          }\n        })\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      // Enable closing the bar with esc\n      window.addEventListener('keydown', event => {\n        if (event.keyCode === 27) {\n          event.preventDefault()\n          this.closeBar()\n        }\n      })\n\n      // Adjust content wrapper transform when window is resized\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeTimeout)\n\n        this.resizeTimeout = setTimeout(() => {\n          this.setContentWrapPush()\n        }, 200)\n      })\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  isValidPosition (position = null) {\n    return ['left', 'right', 'top', 'bottom'].includes(position)\n  }\n\n  addBar (position = 'left', options = {}) {\n    try {\n      // Validate required elements\n      if (!this.mainWrap || !this.contentWrap) return this\n\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      // Check that bar is not already defined\n      if (this.bars[position]) throw 'Bar with position \\'' + position + '\\' is already defined'\n\n      // Create new bar object\n      const newBar = new OffCanvasBar(options)\n      newBar.parentElement = this.mainWrap\n      newBar.position = position\n      newBar.init()\n\n      // Insert new bar\n      this.bars[position] = newBar\n\n      this.debug('Added bar with position \\'' + position + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  openBar (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined'\n      if (bar.element.classList.contains('offcanvas-bar--open')) return\n\n      // Close other bars\n      this.closeBar()\n\n      // Open bar\n      this.debug('Opening bar \\'' + position + '\\'')\n      bar.open()\n\n      // Mark this bar as open\n      this.currentOpenBar = bar\n\n      // Push content wrap if needed\n      this.setContentWrapPush()\n\n      // Remember the button which was used to open off-canvas\n      this.previousOpenButton = button\n\n      // Show overlay\n      this.showOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  closeBar () {\n    try {\n      if (!this.currentOpenBar) return\n\n      this.debug('Closing bar \\'' + this.currentOpenBar.position + '\\'')\n\n      this.currentOpenBar.close()\n\n      // Focus open button which was used to open the bar\n      if (this.previousOpenButton) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton = null\n      }\n\n      this.currentOpenBar = null\n      this.contentWrap.style.transform = null\n      this.mainWrap.style.overflow = null\n\n      this.hideOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  setContentWrapPush () {\n    if (!this.currentOpenBar) return\n    if (!this.currentOpenBar.options.mode) return\n\n    if (['push', 'slide'].includes(this.currentOpenBar.options.mode)) {\n      switch (this.currentOpenBar.position) {\n        case 'left':\n          this.contentWrap.style.transform = 'translateX(' + this.currentOpenBar.element.offsetWidth + 'px)'\n          this.mainWrap.style.overflow = 'hidden'\n          break\n\n        case 'right':\n          this.contentWrap.style.transform = 'translateX(-' + this.currentOpenBar.element.offsetWidth + 'px)'\n          this.mainWrap.style.overflow = 'hidden'\n          break\n\n        case 'top':\n          this.contentWrap.style.transform = 'translateY(' + this.currentOpenBar.element.offsetHeight + 'px)'\n          this.mainWrap.style.overflow = 'hidden'\n          break\n\n        case 'bottom':\n          this.contentWrap.style.transform = 'translateY(-' + this.currentOpenBar.element.offsetHeight + 'px)'\n          this.mainWrap.style.overflow = 'hidden'\n          break\n      }\n    }\n  }\n\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Showing overlay')\n\n    this.overlay.classList.add('offcanvas-overlay--visible')\n  }\n\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Hiding overlay')\n\n    this.overlay.classList.remove('offcanvas-overlay--visible')\n  }\n}\n\nclass OffCanvasBar {\n\n  constructor(options) {\n    this.options = Object.assign({\n      selector: '',\n      focusableElementSelector: 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n      mode: 'float',\n    }, options)\n\n    this.parentElement = null\n    this.element = null\n    this.position = null\n  }\n\n  isValidMode(mode = '') {\n    return ['float', 'push', 'slide'].includes(mode)\n  }\n\n  init () {\n    // Validate required properties\n    if (!this.position) throw 'Missing position for bar'\n    if (!this.parentElement) throw 'Missing parent element for bar \\'' + this.position + '\\''\n\n    // If selector is not specified, use default\n    if (!this.options.selector) this.options.selector = '.offcanvas-bar--' + this.position\n\n    // Check that defined bar element exists\n    this.element = this.parentElement.querySelector(this.options.selector)\n    if (!this.element) throw 'Bar element was not found with selector: ' + this.options.selector\n\n    // Validate mode\n    if (!this.isValidMode(this.options.mode)) throw 'Invalid mode \\'' + this.options.mode + '\\' for bar \\'' + this.position + '\\'. Use one of the following values: float, push, slide.'\n\n    // Insert attributes\n    this.element.classList.add('offcanvas-bar')\n    this.element.setAttribute('data-offcanvas-bar-position', this.position)\n\n    // Disable focus\n    this.disableFocus()\n\n    return this\n  }\n\n  disableFocus () {\n    // Prevent focus on bar child elements\n    this.element.querySelectorAll(this.options.focusableElementSelector).forEach(item => {\n      item.setAttribute('tabindex', '-1')\n    })\n\n    // Prevent focus on bar\n    this.element.setAttribute('tabindex', '-1')\n    this.element.setAttribute('aria-hidden', 'true')\n  }\n\n  enableFocus () {\n    // Enable focus on bar child elements\n    this.element.querySelectorAll(this.options.focusableElementSelector).forEach(item => {\n      item.removeAttribute('tabindex')\n    })\n\n    // Focus on bar\n    this.element.removeAttribute('aria-hidden')\n    this.element.setAttribute('tabindex', '0')\n    this.element.focus()\n  }\n\n  open () {\n    this.enableFocus()\n    this.element.classList.add('offcanvas-bar--open')\n  }\n\n  close () {\n    this.disableFocus()\n    this.element.classList.remove('offcanvas-bar--open')\n  }\n\n}"]}