{"version":3,"sources":["offcanvas.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","OffCanvas","options","polyfillCustomEvent","debug","overlay","closeOnEsc","mainWrapSelector","contentWrapSelector","readyClass","openClass","currentOpenBar","previousOpenButton","resizeTimeout","bars","openButtons","closeButtons","toggleButtons","pushElements","init","value","window","CustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","text","undefined","console","log","error","button","bar","_this","mainWrap","querySelector","contentWrap","querySelectorAll","classList","add","_a","_i","addBar","keys","_a2","_f2","position","getAttribute","isValidPosition","setAttribute","addEventListener","open","indexOf","keyCode","logError","_i2","_a3","_f3","toggle","_i3","_a4","_i4","close","createElement","preventDefault","appendChild","clearTimeout","setTimeout","setPush","newBar","OffCanvasBar","element","mode","join","contains","enableFocus","showOverlay","dispatchEvent","disableFocus","remove","focus","style","removeProperty","_a5","_i5","hideOverlay","transform","overflow","offsetWidth","offsetHeight","_a6","_i6","focusableElementSelector","_a7","_i7","_a8","_i8","removeAttribute"],"mappings":"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","file":"offcanvas.js","sourcesContent":["'use strict';\n\nclass OffCanvas {\n\n  constructor (options) {\n    // Run polyfill\n    this.polyfillCustomEvent()\n\n    // Apply user configuration\n    this.options = Object.assign({\n      // Debug mode\n      debug: false,\n\n      // Show shading overlay over content wrapper when bar is open?\n      overlay: true,\n\n      // Close open bar with escape key?\n      closeOnEsc: true,\n\n      // Selector to find main wrapper\n      mainWrapSelector: '.offcanvas-main',\n\n      // Selector to find content wrapper\n      contentWrapSelector: '.offcanvas-content',\n\n      // Classes\n      readyClass: 'offcanvas-ready',\n      openClass: 'offcanvas-open',\n    }, options)\n\n    // Overlay element\n    this.overlay = null\n\n    // Currently open bar\n    this.currentOpenBar = null\n\n    // Button which was previously used to open the bar\n    this.previousOpenButton = null\n\n    // Window resize timeout\n    this.resizeTimeout = null\n\n    // Object for storing the bars\n    this.bars = {}\n\n    // Arrays for storing buttons\n    this.openButtons = []\n    this.closeButtons = []\n    this.toggleButtons = []\n\n    // Array for storing pushable elements\n    // These elements will be moved when bar with \"push\" mode is being opened.\n    this.pushElements = []\n\n    // Run initializer\n    this.init()\n  }\n\n  // Polyfill for custom event\n  polyfillCustomEvent () {\n    if (typeof window.CustomEvent === 'function') return false;\n\n    window.CustomEvent = function (event, params) {\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: null\n      }\n      var evt = document.createEvent('CustomEvent')\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n      return evt;\n    }\n  }\n\n  // Logging function\n  log (text = '') {\n    console.log('Off-canvas: ' + text)\n  }\n\n  // Error logging function\n  logError (text = '') {\n    console.error('Off-canvas: ' + text)\n  }\n\n  // Debug logging function\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Off-canvas debug: ' + text)\n  }\n\n  // Initializer\n  init () {\n    try {\n      // Find and validate required elements\n      this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n\n      this.contentWrap = this.mainWrap.querySelector(this.options.contentWrapSelector)\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n\n      // Find buttons\n      this.openButtons = this.mainWrap.querySelectorAll('[data-offcanvas-open]')\n      this.closeButtons = this.mainWrap.querySelectorAll('[data-offcanvas-close]')\n      this.toggleButtons = this.mainWrap.querySelectorAll('[data-offcanvas-toggle]')\n\n      // Add classes\n      this.mainWrap.classList.add('offcanvas-main')\n      this.contentWrap.classList.add('offcanvas-content')\n\n      // Find bars\n      this.mainWrap.querySelectorAll('[data-offcanvas-bar]').forEach(bar => {\n        this.addBar(bar)\n      })\n\n      // Check that there's at least one bar defined\n      if (!Object.keys(this.bars).length) throw 'Cannot find any bars.'\n\n      // Open buttons\n      this.openButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-open')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        // Add ARIA attributes\n        button.setAttribute('aria-expanded', 'false')\n\n        // Event listeners for open buttons\n        button.addEventListener('click', event => {\n          this.open(position, button)\n        })\n\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            this.open(position, button)\n          }\n        })\n      })\n\n      // Toggle buttons\n      this.toggleButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-toggle')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Toggle button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        // Add ARIA attributes\n        button.setAttribute('aria-expanded', 'false')\n\n        // Event listeners for toggle buttons\n        button.addEventListener('click', event => {\n          this.toggle(position, button)\n        })\n\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            this.toggle(position, button)\n          }\n        })\n      })\n\n      // Close buttons\n      this.closeButtons.forEach(button => {\n        // Event listeners for close buttons\n        button.addEventListener('click', event => {\n          this.close()\n        })\n\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            this.close()\n          }\n        })\n      })\n\n      // Find pushable elements\n      this.pushElements = this.mainWrap.querySelectorAll('[data-offcanvas-push]')\n\n      if (this.pushElements.length) this.debug('Registered ' + this.pushElements.length + ' pushable elements.')\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('offcanvas-overlay')\n        this.overlay.addEventListener('click', () => this.close())\n        this.overlay.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      // Enable closing the bar with escape key\n      if (this.options.closeOnEsc) {\n        window.addEventListener('keydown', event => {\n          if (event.keyCode === 27) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      }\n\n      // Adjust content wrapper transform when window is resized\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeTimeout)\n\n        this.resizeTimeout = setTimeout(() => {\n          this.setPush()\n        }, 200)\n      })\n\n      // Add class\n      this.mainWrap.classList.add(this.options.readyClass)\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  isValidPosition (position = null) {\n    return ['left', 'right', 'top', 'bottom'].indexOf(position) >= 0\n  }\n\n  addBar (bar) {\n    try {\n      // Get bar configuration\n      var position = bar.getAttribute('data-offcanvas-bar')\n\n      // Validate required elements\n      if (!this.mainWrap || !this.contentWrap) return this\n\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      // Check that bar is not already defined\n      if (this.bars[position]) throw 'Duplicate bar with position \\'' + position + '\\''\n\n      // Create new bar object\n      const newBar = new OffCanvasBar()\n      newBar.element = bar\n      newBar.init()\n\n      // Insert new bar\n      this.bars[position] = newBar\n\n      this.debug('Added bar \\'' + position + '\\' with mode \\'' + newBar.mode + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  open (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined. Use one of the following: ' + Object.keys(this.bars).join(', ') + '.'\n      if (bar.element.classList.contains('offcanvas-bar--open')) return\n\n      // Close other bars\n      this.close()\n\n      // Open bar\n      this.debug('Opening bar \\'' + position + '\\'')\n      bar.enableFocus()\n      bar.element.classList.add('offcanvas-bar--open')\n\n      // Mark this bar as open\n      this.currentOpenBar = bar\n\n      // Push elements\n      this.setPush()\n\n      // Add class to the main wrap\n      this.mainWrap.classList.add(this.options.openClass)\n\n      // Remember the button which was used to open off-canvas\n      this.previousOpenButton = button\n\n      // Set ARIA attributes of the button\n      if (button) button.setAttribute('aria-expanded', true)\n\n      // Show overlay\n      this.showOverlay()\n\n      // Dispatch event\n      this.mainWrap.dispatchEvent(new CustomEvent('open', {\n        detail: {\n          bar: bar,\n          button: button,\n        }\n      }))\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  toggle (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      if (this.currentOpenBar && this.currentOpenBar.position == position) {\n        this.close()\n      } else {\n        this.close()\n        this.open(position, button)\n      }\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  close () {\n    try {\n      if (!this.currentOpenBar) return\n\n      // Close bar\n      this.debug('Closing bar \\'' + this.currentOpenBar.position + '\\'')\n      this.currentOpenBar.disableFocus()\n      this.currentOpenBar.element.classList.remove('offcanvas-bar--open')\n\n      // Focus open button which was used to open the bar\n      if (this.previousOpenButton) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton.setAttribute('aria-expanded', 'false')\n        this.previousOpenButton = null\n      }\n\n      // Remove transforms from wrapper elements\n      this.contentWrap.style.removeProperty('transform')\n      this.mainWrap.style.removeProperty('overflow')\n\n      // Remove transforms from pushable elements\n      this.pushElements.forEach(el => {\n        el.style.removeProperty('transform')\n      })\n\n      // Remove class from the main wrap\n      this.mainWrap.classList.remove(this.options.openClass)\n\n      // Hide overlay\n      this.hideOverlay()\n\n      // Dispatch event\n      this.mainWrap.dispatchEvent(new CustomEvent('close', {\n        detail: {\n          bar: this.currentOpenBar,\n        }\n      }))\n\n      this.currentOpenBar = null\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  setPush () {\n    if (!this.currentOpenBar) return\n    if (!this.currentOpenBar.mode) return\n\n    var transform = null\n\n    // Hide overflow of main wrapper\n    // This has to be done first in order to get correct width/height\n    this.mainWrap.style.overflow = 'hidden'\n\n    switch (this.currentOpenBar.position) {\n      case 'left':\n        transform = 'translateX(' + this.currentOpenBar.element.offsetWidth + 'px)'\n        break\n\n      case 'right':\n        transform = 'translateX(-' + this.currentOpenBar.element.offsetWidth + 'px)'\n        break\n\n      case 'top':\n        transform = 'translateY(' + this.currentOpenBar.element.offsetHeight + 'px)'\n        break\n\n      case 'bottom':\n        transform = 'translateY(-' + this.currentOpenBar.element.offsetHeight + 'px)'\n        break\n    }\n\n    if (['push', 'slide'].indexOf(this.currentOpenBar.mode) >= 0) {\n      // Transform content wrapper\n      this.contentWrap.style.transform = transform\n    }\n\n    // Transform other pushable elements\n    this.pushElements.forEach(el => {\n      el.style.transform = transform\n    })\n  }\n\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Showing overlay')\n\n    this.overlay.classList.add('offcanvas-overlay--visible')\n  }\n\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Hiding overlay')\n\n    this.overlay.classList.remove('offcanvas-overlay--visible')\n  }\n}\n\nclass OffCanvasBar {\n\n  constructor() {\n    this.element = null\n    this.position = null\n    this.mode = 'float'\n    this.focusableElementSelector = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n  }\n\n  init () {\n    // Check that defined bar element exists\n    if (!this.element) throw 'Bar element for \\'' + this.position + '\\' was not found!'\n\n    // Set position\n    this.position = this.element.getAttribute('data-offcanvas-bar')\n    if (!this.position) throw 'Missing position for bar'\n\n    // Set mode\n    if (this.element.getAttribute('data-offcanvas-bar-mode')) {\n      this.mode = this.element.getAttribute('data-offcanvas-bar-mode')\n    }\n\n    // Validate mode\n    if (['float', 'push', 'slide'].indexOf(this.mode) < 0) throw 'Invalid mode \\'' + this.mode + '\\' for bar \\'' + this.position + '\\'. Use one of the following values: float, push, slide.'\n\n    // Disable focus\n    this.disableFocus()\n\n    return this\n  }\n\n  disableFocus () {\n    // Disable focus on bar child elements\n    this.element.querySelectorAll(this.focusableElementSelector).forEach(item => {\n      item.setAttribute('tabindex', '-1')\n    })\n\n    // Disable focus on bar\n    this.element.setAttribute('tabindex', '-1')\n    this.element.setAttribute('aria-hidden', 'true')\n\n    return this\n  }\n\n  enableFocus () {\n    // Enable focus on bar child elements\n    this.element.querySelectorAll(this.focusableElementSelector).forEach(item => {\n      item.removeAttribute('tabindex')\n    })\n\n    // Enable focus on bar\n    this.element.removeAttribute('aria-hidden')\n    this.element.setAttribute('tabindex', '0')\n\n    // Focus on bar\n    this.element.focus()\n\n    return this\n  }\n\n}"]}