{"version":3,"sources":["offcanvas.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","OffCanvas","options","debug","overlay","mainWrapSelector","contentWrapSelector","openButtonSelector","closeButtonSelector","toggleButtonSelector","mainWrap","document","querySelector","contentWrap","openButtons","querySelectorAll","closeButtons","toggleButtons","bars","left","right","top","bottom","init","value","text","undefined","console","log","error","_this","classList","add","forEach","button","position","getAttribute","isValidPosition","addEventListener","open","event","indexOf","keyCode","preventDefault","logError","close","createElement","appendChild","includes","bar","OffCanvasBar","parentElement","element","contains","mode","style","transform","offsetWidth","overflowX","offsetHeight","overflowY","showOverlay","_this2","keys","remove","hideOverlay","selector","focusableElementSelector","isValidMode","setAttribute"],"mappings":"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","file":"offcanvas.js","sourcesContent":["'use strict';\n\nclass OffCanvas {\n\n  constructor (options) {\n    this.options = Object.assign({\n      debug: false,\n      overlay: true,\n      mainWrapSelector: '.offcanvas-main',\n      contentWrapSelector: '.offcanvas-content',\n      openButtonSelector: '.offcanvas-open',\n      closeButtonSelector: '.offcanvas-close',\n      toggleButtonSelector: '.offcanvas-toggle',\n    }, options)\n\n    this.overlay = null\n    this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n    this.contentWrap = document.querySelector(this.options.contentWrapSelector)\n    this.openButtons = document.querySelectorAll(this.options.openButtonSelector)\n    this.closeButtons = document.querySelectorAll(this.options.closeButtonSelector)\n    this.toggleButtons = document.querySelectorAll(this.options.toggleButtonSelector)\n    this.bars = {\n      left: null,\n      right: null,\n      top: null,\n      bottom: null,\n    }\n\n    this.init()\n  }\n\n  // Logging function\n  log (text = '') {\n    console.log('Off-canvas: ' + text)\n  }\n\n  // Error logging function\n  logError (text = '') {\n    console.error('Off-canvas: ' + text)\n  }\n\n  // Debug logging function\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Off-canvas debug: ' + text)\n  }\n\n  init () {\n    try {\n      // Validate required elements\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n\n      // Add classes\n      this.mainWrap.classList.add('offcanvas-main')\n      this.contentWrap.classList.add('offcanvas-content')\n\n      // Add event listeners for open buttons\n      this.openButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-bar') || 'left'\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.open(position))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) > -1) {\n            event.preventDefault()\n            this.open(position)\n          }\n        })\n      })\n\n      // Add event listeners for close buttons\n      this.closeButtons.forEach(button => {\n        button.addEventListener('click', () => this.close())\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) > -1) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      })\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('offcanvas-overlay')\n        this.overlay.addEventListener('click', () => this.close())\n        this.overlay.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) > -1) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      console.log(this)\n    } catch (error) {\n      this.logError(error)\n    }\n  }\n\n  isValidPosition (position = null) {\n    return ['left', 'right', 'top', 'bottom'].includes(position)\n  }\n\n  addBar (position = 'left', options = {}) {\n    try {\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      // Check that bar is not already defined\n      if (this.bars[position]) throw 'Bar with position \\'' + position + '\\' is already defined'\n\n      // Create new bar object\n      const bar = new OffCanvasBar(options)\n      bar.parentElement = this.mainWrap\n      bar.position = position\n      bar.init()\n\n      // Insert new bar\n      this.bars[position] = bar\n\n      this.debug('Added bar with position \\'' + position + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  open (position = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined'\n      if (bar.element.classList.contains('offcanvas-bar--open')) return\n\n      // Close other bars\n      this.close()\n\n      // Open bar\n      bar.element.classList.add('offcanvas-bar--open')\n      this.debug('Opening bar \\'' + position + '\\'')\n\n      if (bar.options.mode && bar.options.mode == 'push') {\n        let transform = ''\n\n        switch (bar.position) {\n          case 'left':\n            this.contentWrap.style.transform = 'translateX(' + bar.element.offsetWidth + 'px)'\n            this.mainWrap.style.overflowX = 'hidden'\n            break\n\n          case 'right':\n            this.contentWrap.style.transform = 'translateX(-' + bar.element.offsetWidth + 'px)'\n            this.mainWrap.style.overflowX = 'hidden'\n            break\n\n          case 'top':\n            this.contentWrap.style.transform = 'translateY(' + bar.element.offsetHeight + 'px)'\n            this.mainWrap.style.overflowY = 'hidden'\n            break\n\n          case 'bottom':\n            this.contentWrap.style.transform = 'translateY(-' + bar.element.offsetHeight + 'px)'\n            this.mainWrap.style.overflowY = 'hidden'\n            break\n        }\n      }\n\n      // Show overlay\n      this.showOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  close () {\n    try {\n      Object.keys(this.bars).forEach(position => {\n        const bar = this.bars[position]\n\n        if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined'\n        if (!bar.element.classList.contains('offcanvas-bar--open')) return\n\n        bar.element.classList.remove('offcanvas-bar--open')\n        this.debug('Closing bar \\'' + position + '\\'')\n      })\n\n      this.contentWrap.style.transform = null\n      this.mainWrap.style.overflowX = null\n      this.mainWrap.style.overflowY = null\n\n      this.hideOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Showing overlay')\n\n    this.overlay.classList.add('offcanvas-overlay--visible')\n  }\n\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Hiding overlay')\n\n    this.overlay.classList.remove('offcanvas-overlay--visible')\n  }\n\n  // init () {\n  // \ttry {\n  // \t\t// Validate required elements\n  // \t\tif (!this.body) throw this.error('Body element was not found with selector: ' + this.options.bodySelector)\n  // \t\tif (!this.bar) throw this.error('Bar element was not found with selector: ' + this.options.barSelector)\n  // \t\tif (!this.page) throw this.error('Page element was not found with selector: ' + this.options.pageSelector)\n\n  // \t\t// Get all focusable elements inside off-canvas bar\n  // \t\t// We need to prevent focus from these elements when bar is closed\n  // \t\tthis.barFocusableElements = this.bar.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n\n  // \t\t// Initially close bar\n  // \t\tthis.closeBar()\n\n  // \t\t// Add event listeners to toggle buttons\n  // \t\tthis.openButtons.forEach(button => {\n  // \t\t\tbutton.addEventListener('click', () => this.openBar(button))\n  // \t\t\tbutton.addEventListener('keydown', event => {\n  // \t\t\t\tif ([13, 32].indexOf(event.keyCode) > -1) {\n  // \t\t\t\t\tevent.preventDefault()\n  // \t\t\t\t\tthis.openBar(button)\n  // \t\t\t\t}\n  // \t\t\t})\n  // \t\t})\n\n  // \t\tthis.closeButtons.forEach(button => {\n  // \t\t\tbutton.addEventListener('click', () => this.closeBar())\n  // \t\t\tbutton.addEventListener('keydown', event => {\n  // \t\t\t\tif ([13, 32].indexOf(event.keyCode) > -1) {\n  // \t\t\t\t\tevent.preventDefault()\n  // \t\t\t\t\tthis.closeBar()\n  // \t\t\t\t}\n  // \t\t\t})\n  // \t\t})\n\n  // \t\tthis.toggleButtons.forEach(button => {\n  // \t\t\tbutton.addEventListener('click', () => this.toggleBar(button))\n  // \t\t\tbutton.addEventListener('keydown', event => {\n  // \t\t\t\tif ([13, 32].indexOf(event.keyCode) > -1) {\n  // \t\t\t\t\tevent.preventDefault()\n  // \t\t\t\t\tthis.toggleBar(button)\n  // \t\t\t\t}\n  // \t\t\t})\n  // \t\t})\n  // \t} catch (e) {\n  // \t\tconsole.error(e)\n  // \t}\n  // }\n\n  // openBar (button = null) {\n  // \tif (this.isOpen) return\n\n  // \tthis.body.classList.add('offCanvas-open')\n\n  // \t// Enable focus on all bar child elements\n  // \tthis.barFocusableElements.forEach(item => {\n  // \t\titem.removeAttribute('tabindex')\n  // \t})\n\n  // \t// Focus on bar\n  // \tthis.bar.removeAttribute('aria-hidden')\n  // \tthis.bar.setAttribute('tabindex', '0')\n  // \tthis.bar.focus()\n\n  // \t// Remember the button which was used to open off-canvas\n  // \tthis.previousOpenButton = button\n\n  // \tthis.isOpen = true\n  // }\n\n  // closeBar () {\n  // \tthis.body.classList.remove('offCanvas-open')\n\n  // \t// Prevent focus on all bar child elements\n  // \tthis.barFocusableElements.forEach(item => {\n  // \t\titem.setAttribute('tabindex', '-1')\n  // \t})\n\n  // \t// Prevent focus on bar\n  // \tthis.bar.setAttribute('tabindex', '-1')\n  // \tthis.bar.setAttribute('aria-hidden', 'true')\n\n  // \t// Focus open button which was used to open off-canvas\n  // \tif (this.previousOpenButton) this.previousOpenButton.focus()\n\n  // \tthis.previousOpenButton = null\n  // \tthis.isOpen = false\n  // }\n\n  // toggleBar (button = null) {\n  // \tif (this.isOpen) {\n  // \t\tthis.closeBar()\n  // \t} else {\n  // \t\tthis.openBar(button)\n  // \t}\n  // }\n\n}\n\nclass OffCanvasBar {\n\n  constructor(options) {\n    this.options = Object.assign({\n      selector: '',\n      focusableElementSelector: 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n      mode: 'float',\n    }, options)\n\n    this.parentElement = null\n    this.element = null\n    this.position = null\n  }\n\n  isValidMode(mode = '') {\n    return ['float', 'push', 'slide'].includes(mode)\n  }\n\n  init () {\n    // Validate required properties\n    if (!this.position) throw 'Missing position for bar'\n    if (!this.parentElement) throw 'Missing parent element for bar with position \\'' + this.position + '\\''\n    if (!this.options.selector) throw 'Missing element selector for bar with position \\'' + this.position + '\\''\n\n    // Check that defined bar element exists\n    this.element = this.parentElement.querySelector(this.options.selector)\n    if (!this.element) throw 'Bar element was not found with selector: ' + this.options.selector\n\n    // Validate mode\n    if (!this.isValidMode(this.options.mode)) throw 'Invalid mode \\'' + this.options.mode + '\\' for bar \\'' + this.position + '\\'. Use one of the following values: float, push, slide.'\n\n    // Insert attributes\n    this.element.classList.add('offcanvas-bar')\n    this.element.setAttribute('data-offcanvas-bar-position', this.position)\n\n    return this\n  }\n\n}"]}