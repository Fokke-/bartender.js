{"version":3,"sources":["offcanvas.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","OffCanvas","options","debug","overlay","mainWrapSelector","contentWrapSelector","openButtonSelector","closeButtonSelector","toggleButtonSelector","mainWrap","document","querySelector","contentWrap","openButtons","querySelectorAll","closeButtons","toggleButtons","bars","left","right","top","bottom","currentOpenBar","previousOpenButton","resizeTimeout","init","value","text","undefined","console","log","error","_this","classList","add","forEach","button","position","getAttribute","isValidPosition","addEventListener","openBar","event","indexOf","keyCode","preventDefault","logError","closeBar","createElement","appendChild","window","clearTimeout","setTimeout","setContentWrapPush","includes","bar","OffCanvasBar","parentElement","element","contains","open","showOverlay","close","focus","style","transform","overflowX","overflowY","hideOverlay","mode","offsetWidth","offsetHeight","remove","selector","focusableElementSelector","isValidMode","setAttribute","disableFocus","item","removeAttribute","enableFocus"],"mappings":"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","file":"offcanvas.js","sourcesContent":["'use strict';\n\nclass OffCanvas {\n\n  constructor (options) {\n    this.options = Object.assign({\n      debug: false,\n      overlay: true,\n      mainWrapSelector: '.offcanvas-main',\n      contentWrapSelector: '.offcanvas-content',\n      openButtonSelector: '.offcanvas-open',\n      closeButtonSelector: '.offcanvas-close',\n      toggleButtonSelector: '.offcanvas-toggle',\n    }, options)\n\n    this.overlay = null\n    this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n    this.contentWrap = document.querySelector(this.options.contentWrapSelector)\n    this.openButtons = document.querySelectorAll(this.options.openButtonSelector)\n    this.closeButtons = document.querySelectorAll(this.options.closeButtonSelector)\n    this.toggleButtons = document.querySelectorAll(this.options.toggleButtonSelector)\n    this.bars = {\n      left: null,\n      right: null,\n      top: null,\n      bottom: null,\n    }\n    this.currentOpenBar = null\n    this.previousOpenButton = null\n    this.resizeTimeout = null\n\n    this.init()\n  }\n\n  // Logging function\n  log (text = '') {\n    console.log('Off-canvas: ' + text)\n  }\n\n  // Error logging function\n  logError (text = '') {\n    console.error('Off-canvas: ' + text)\n  }\n\n  // Debug logging function\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Off-canvas debug: ' + text)\n  }\n\n  init () {\n    try {\n      // Validate required elements\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n\n      // Add classes\n      this.mainWrap.classList.add('offcanvas-main')\n      this.contentWrap.classList.add('offcanvas-content')\n\n      // Add event listeners for open buttons\n      this.openButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-bar') || 'left'\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.openBar(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) > -1) {\n            event.preventDefault()\n            this.openBar(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for close buttons\n      this.closeButtons.forEach(button => {\n        button.addEventListener('click', () => this.closeBar())\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) > -1) {\n            event.preventDefault()\n            this.closeBar()\n          }\n        })\n      })\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('offcanvas-overlay')\n        this.overlay.addEventListener('click', () => this.closeBar())\n        this.overlay.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) > -1) {\n            event.preventDefault()\n            this.closeBar()\n          }\n        })\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      // Enable closing the bar with esc\n      window.addEventListener('keydown', event => {\n        if (event.keyCode === 27) {\n          event.preventDefault()\n          this.closeBar()\n        }\n      })\n\n      // Adjust content wrapper push when window is resized\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeTimeout)\n        console.log(this.resizeTimeout)\n        this.resizeTimeout = setTimeout(() => {\n          this.setContentWrapPush()\n        }, 200)\n      })\n    } catch (error) {\n      this.logError(error)\n    }\n  }\n\n  isValidPosition (position = null) {\n    return ['left', 'right', 'top', 'bottom'].includes(position)\n  }\n\n  addBar (position = 'left', options = {}) {\n    try {\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      // Check that bar is not already defined\n      if (this.bars[position]) throw 'Bar with position \\'' + position + '\\' is already defined'\n\n      // Create new bar object\n      const bar = new OffCanvasBar(options)\n      bar.parentElement = this.mainWrap\n      bar.position = position\n      bar.init()\n\n      // Insert new bar\n      this.bars[position] = bar\n\n      this.debug('Added bar with position \\'' + position + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  openBar (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined'\n      if (bar.element.classList.contains('offcanvas-bar--open')) return\n\n      // Close other bars\n      this.closeBar()\n\n      // Open bar\n      this.debug('Opening bar \\'' + position + '\\'')\n      bar.open()\n\n      // Mark this bar as open\n      this.currentOpenBar = bar\n\n      // Push content wrap if needed\n      this.setContentWrapPush()\n\n      // Remember the button which was used to open off-canvas\n      this.previousOpenButton = button\n\n      // Show overlay\n      this.showOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  closeBar () {\n    try {\n      if (!this.currentOpenBar) return\n\n      this.currentOpenBar.close()\n\n      // Focus open button which was used to open the bar\n      if (this.previousOpenButton) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton = null\n      }\n\n      this.currentOpenBar = null\n      this.contentWrap.style.transform = null\n      this.mainWrap.style.overflowX = null\n      this.mainWrap.style.overflowY = null\n\n      this.hideOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  setContentWrapPush () {\n    if (!this.currentOpenBar) return\n    if (!this.currentOpenBar.options.mode) return\n\n    if (['push', 'slide'].includes(this.currentOpenBar.options.mode)) {\n      switch (this.currentOpenBar.position) {\n        case 'left':\n          this.contentWrap.style.transform = 'translateX(' + this.currentOpenBar.element.offsetWidth + 'px)'\n          this.mainWrap.style.overflowX = 'hidden'\n          break\n\n        case 'right':\n          this.contentWrap.style.transform = 'translateX(-' + this.currentOpenBar.element.offsetWidth + 'px)'\n          this.mainWrap.style.overflowX = 'hidden'\n          break\n\n        case 'top':\n          this.contentWrap.style.transform = 'translateY(' + this.currentOpenBar.element.offsetHeight + 'px)'\n          this.mainWrap.style.overflowY = 'hidden'\n          break\n\n        case 'bottom':\n          this.contentWrap.style.transform = 'translateY(-' + this.currentOpenBar.element.offsetHeight + 'px)'\n          this.mainWrap.style.overflowY = 'hidden'\n          break\n      }\n    }\n  }\n\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Showing overlay')\n\n    this.overlay.classList.add('offcanvas-overlay--visible')\n  }\n\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Hiding overlay')\n\n    this.overlay.classList.remove('offcanvas-overlay--visible')\n  }\n}\n\nclass OffCanvasBar {\n\n  constructor(options) {\n    this.options = Object.assign({\n      selector: '',\n      focusableElementSelector: 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n      mode: 'float',\n    }, options)\n\n    this.parentElement = null\n    this.element = null\n    this.position = null\n  }\n\n  isValidMode(mode = '') {\n    return ['float', 'push', 'slide'].includes(mode)\n  }\n\n  init () {\n    // Validate required properties\n    if (!this.position) throw 'Missing position for bar'\n    if (!this.parentElement) throw 'Missing parent element for bar with position \\'' + this.position + '\\''\n    if (!this.options.selector) throw 'Missing element selector for bar with position \\'' + this.position + '\\''\n\n    // Check that defined bar element exists\n    this.element = this.parentElement.querySelector(this.options.selector)\n    if (!this.element) throw 'Bar element was not found with selector: ' + this.options.selector\n\n    // Validate mode\n    if (!this.isValidMode(this.options.mode)) throw 'Invalid mode \\'' + this.options.mode + '\\' for bar \\'' + this.position + '\\'. Use one of the following values: float, push, slide.'\n\n    // Insert attributes\n    this.element.classList.add('offcanvas-bar')\n    this.element.setAttribute('data-offcanvas-bar-position', this.position)\n\n    // Disable focus\n    this.disableFocus()\n\n    return this\n  }\n\n  disableFocus () {\n    // Prevent focus on bar child elements\n    this.element.querySelectorAll(this.options.focusableElementSelector).forEach(item => {\n      item.setAttribute('tabindex', '-1')\n    })\n\n    // Prevent focus on bar\n    this.element.setAttribute('tabindex', '-1')\n    this.element.setAttribute('aria-hidden', 'true')\n  }\n\n  enableFocus () {\n    // Enable focus on bar child elements\n    this.element.querySelectorAll(this.options.focusableElementSelector).forEach(item => {\n      item.removeAttribute('tabindex')\n    })\n\n    // Focus on bar\n    this.element.removeAttribute('aria-hidden')\n    this.element.setAttribute('tabindex', '0')\n    this.element.focus()\n  }\n\n  open () {\n    this.enableFocus()\n    this.element.classList.add('offcanvas-bar--open')\n  }\n\n  close () {\n    this.disableFocus()\n    this.element.classList.remove('offcanvas-bar--open')\n  }\n\n}"]}