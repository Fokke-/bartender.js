{"version":3,"sources":["offcanvas.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","OffCanvas","options","debug","overlay","closeOnEsc","mainWrapSelector","contentWrapSelector","currentOpenBar","previousOpenButton","resizeTimeout","bars","openButtons","closeButtons","toggleButtons","pushElements","init","value","text","undefined","console","log","error","button","bar","_this","mainWrap","document","querySelector","contentWrap","querySelectorAll","classList","add","_a","_i","addBar","keys","_a2","_f2","position","getAttribute","isValidPosition","addEventListener","open","event","indexOf","keyCode","preventDefault","logError","_i2","_a3","_f3","toggle","_i3","_a4","_i4","close","createElement","appendChild","window","clearTimeout","setTimeout","setPush","newBar","OffCanvasBar","element","mode","join","contains","enableFocus","showOverlay","disableFocus","remove","focus","style","removeProperty","_a5","_i5","hideOverlay","transform","offsetWidth","offsetHeight","overflow","_a6","_i6","focusableElementSelector","_a7","_i7","setAttribute","_a8","_i8","removeAttribute"],"mappings":"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","file":"offcanvas.js","sourcesContent":["'use strict';\n\nclass OffCanvas {\n\n  constructor (options) {\n    // Apply user configuration\n    this.options = Object.assign({\n      // Debug mode\n      debug: false,\n\n      // Show shading overlay over content wrapper when bar is open?\n      overlay: true,\n\n      // Close open bar with escape key?\n      closeOnEsc: true,\n\n      // Selector to find main wrapper\n      mainWrapSelector: '.offcanvas-main',\n\n      // Selector to find content wrapper\n      contentWrapSelector: '.offcanvas-content',\n    }, options)\n\n    // Overlay element\n    this.overlay = null\n\n    // Currently open bar\n    this.currentOpenBar = null\n\n    // Button which was previously used to open the bar\n    this.previousOpenButton = null\n\n    // Window resize timeout\n    this.resizeTimeout = null\n\n    // Object for storing the bars\n    this.bars = {}\n\n    // Arrays for storing buttons\n    this.openButtons = []\n    this.closeButtons = []\n    this.toggleButtons = []\n\n    // Array for storing pushable elements\n    // These elements will be moved when bar with \"push\" mode is being opened.\n    this.pushElements = []\n\n    // Run initializer\n    this.init()\n  }\n\n  // Logging function\n  log (text = '') {\n    console.log('Off-canvas: ' + text)\n  }\n\n  // Error logging function\n  logError (text = '') {\n    console.error('Off-canvas: ' + text)\n  }\n\n  // Debug logging function\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Off-canvas debug: ' + text)\n  }\n\n  // Initializer\n  init () {\n    try {\n      // Find and validate required elements\n      this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n\n      this.contentWrap = this.mainWrap.querySelector(this.options.contentWrapSelector)\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n\n      // Find buttons\n      this.openButtons = this.mainWrap.querySelectorAll('[data-offcanvas-open]')\n      this.closeButtons = this.mainWrap.querySelectorAll('[data-offcanvas-close]')\n      this.toggleButtons = this.mainWrap.querySelectorAll('[data-offcanvas-toggle]')\n\n      // Add classes\n      this.mainWrap.classList.add('offcanvas-main')\n      this.contentWrap.classList.add('offcanvas-content')\n\n      // Find bars\n      this.mainWrap.querySelectorAll('[data-offcanvas-bar]').forEach(bar => {\n        this.addBar(bar)\n      })\n\n      // Check that there's at least one bar defined\n      if (!Object.keys(this.bars).length) throw 'Cannot find any bars.'\n\n      // Add event listeners for open buttons\n      this.openButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-open')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.open(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.open(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for toggle buttons\n      this.toggleButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-toggle')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Toggle button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.toggle(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.toggle(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for close buttons\n      this.closeButtons.forEach(button => {\n        button.addEventListener('click', () => this.close())\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      })\n\n      // Find pushable elements\n      this.pushElements = this.mainWrap.querySelectorAll('[data-offcanvas-push]')\n\n      if (this.pushElements.length) this.log('Registered ' + this.pushElements.length + ' pushable elements.')\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('offcanvas-overlay')\n        this.overlay.addEventListener('click', () => this.close())\n        this.overlay.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      // Enable closing the bar with escape key\n      if (this.options.closeOnEsc) {\n        window.addEventListener('keydown', event => {\n          if (event.keyCode === 27) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      }\n\n      // Adjust content wrapper transform when window is resized\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeTimeout)\n\n        this.resizeTimeout = setTimeout(() => {\n          this.setPush()\n        }, 200)\n      })\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  isValidPosition (position = null) {\n    return ['left', 'right', 'top', 'bottom'].indexOf(position) >= 0\n  }\n\n  addBar (bar) {\n    try {\n      // Get bar configuration\n      var position = bar.getAttribute('data-offcanvas-bar')\n\n      // Validate required elements\n      if (!this.mainWrap || !this.contentWrap) return this\n\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      // Check that bar is not already defined\n      if (this.bars[position]) throw 'Duplicate bar with position \\'' + position + '\\''\n\n      // Create new bar object\n      const newBar = new OffCanvasBar()\n      newBar.element = bar\n      newBar.init()\n\n      // Insert new bar\n      this.bars[position] = newBar\n\n      this.debug('Added bar \\'' + position + '\\' with mode \\'' + newBar.mode + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  open (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined. Use one of the following: ' + Object.keys(this.bars).join(', ') + '.'\n      if (bar.element.classList.contains('offcanvas-bar--open')) return\n\n      // Close other bars\n      this.close()\n\n      // Open bar\n      this.debug('Opening bar \\'' + position + '\\'')\n      bar.enableFocus()\n      bar.element.classList.add('offcanvas-bar--open')\n\n      // Mark this bar as open\n      this.currentOpenBar = bar\n\n      // Push elements\n      this.setPush()\n\n      // Remember the button which was used to open off-canvas\n      this.previousOpenButton = button\n\n      // Show overlay\n      this.showOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  toggle (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      if (this.currentOpenBar && this.currentOpenBar.position == position) {\n        this.close()\n      } else {\n        this.close()\n        this.open(position, button)\n      }\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  close () {\n    try {\n      if (!this.currentOpenBar) return\n\n      // Close bar\n      this.debug('Closing bar \\'' + this.currentOpenBar.position + '\\'')\n      this.currentOpenBar.disableFocus()\n      this.currentOpenBar.element.classList.remove('offcanvas-bar--open')\n      this.currentOpenBar = null\n\n      // Focus open button which was used to open the bar\n      if (this.previousOpenButton) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton = null\n      }\n\n      // Remove transforms from wrapper elements\n      this.contentWrap.style.removeProperty('transform')\n      this.mainWrap.style.removeProperty('overflow')\n\n      // Remove transforms from pushable elements\n      this.pushElements.forEach(el => {\n        el.style.removeProperty('transform')\n      })\n\n      // Hide overlay\n      this.hideOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  setPush () {\n    if (!this.currentOpenBar) return\n    if (!this.currentOpenBar.mode) return\n\n    if (['push', 'slide'].indexOf(this.currentOpenBar.mode) >= 0) {\n      var transform = null\n\n      switch (this.currentOpenBar.position) {\n        case 'left':\n          transform = 'translateX(' + this.currentOpenBar.element.offsetWidth + 'px)'\n          break\n\n        case 'right':\n          transform = 'translateX(-' + this.currentOpenBar.element.offsetWidth + 'px)'\n          break\n\n        case 'top':\n          transform = 'translateY(' + this.currentOpenBar.element.offsetHeight + 'px)'\n          break\n\n        case 'bottom':\n          transform = 'translateY(-' + this.currentOpenBar.element.offsetHeight + 'px)'\n          break\n      }\n\n      if (transform) {\n        // Hide overflow of main wrapper\n        this.mainWrap.style.overflow = 'hidden'\n\n        // Transform content wrapper\n        this.contentWrap.style.transform = transform\n\n        // Transform other pushable elements\n        this.pushElements.forEach(el => {\n          el.style.transform = transform\n        })\n      }\n    }\n  }\n\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Showing overlay')\n\n    this.overlay.classList.add('offcanvas-overlay--visible')\n  }\n\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Hiding overlay')\n\n    this.overlay.classList.remove('offcanvas-overlay--visible')\n  }\n}\n\nclass OffCanvasBar {\n\n  constructor() {\n    this.element = null\n    this.position = null\n    this.mode = 'float'\n    this.focusableElementSelector = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n  }\n\n  init () {\n    // Check that defined bar element exists\n    if (!this.element) throw 'Bar element for \\'' + this.position + '\\' was not found!'\n\n    // Set position\n    this.position = this.element.getAttribute('data-offcanvas-bar')\n    if (!this.position) throw 'Missing position for bar'\n\n    // Set mode\n    if (this.element.getAttribute('data-offcanvas-bar-mode')) {\n      this.mode = this.element.getAttribute('data-offcanvas-bar-mode')\n    }\n\n    // Validate mode\n    if (['float', 'push', 'slide'].indexOf(this.mode) < 0) throw 'Invalid mode \\'' + this.mode + '\\' for bar \\'' + this.position + '\\'. Use one of the following values: float, push, slide.'\n\n    // Disable focus\n    this.disableFocus()\n\n    return this\n  }\n\n  disableFocus () {\n    // Disable focus on bar child elements\n    this.element.querySelectorAll(this.focusableElementSelector).forEach(item => {\n      item.setAttribute('tabindex', '-1')\n    })\n\n    // Disable focus on bar\n    this.element.setAttribute('tabindex', '-1')\n    this.element.setAttribute('aria-hidden', 'true')\n\n    return this\n  }\n\n  enableFocus () {\n    // Enable focus on bar child elements\n    this.element.querySelectorAll(this.focusableElementSelector).forEach(item => {\n      item.removeAttribute('tabindex')\n    })\n\n    // Enable focus on bar\n    this.element.removeAttribute('aria-hidden')\n    this.element.setAttribute('tabindex', '0')\n\n    // Focus on bar\n    this.element.focus()\n\n    return this\n  }\n\n}"]}