{"version":3,"sources":["offcanvas.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","OffCanvas","options","debug","overlay","closeOnEsc","mainWrapSelector","contentWrapSelector","currentOpenBar","previousOpenButton","resizeTimeout","bars","init","value","text","undefined","console","log","error","button","bar","_this","mainWrap","document","querySelector","contentWrap","openButtons","querySelectorAll","closeButtons","toggleButtons","classList","add","_a","_i","addBar","keys","_a2","_f2","position","getAttribute","isValidPosition","addEventListener","open","event","indexOf","keyCode","preventDefault","logError","_i2","_a3","_f3","toggle","_i3","_a4","_i4","close","createElement","appendChild","window","clearTimeout","setTimeout","setContentWrapPush","newBar","OffCanvasBar","element","mode","join","contains","enableFocus","showOverlay","disableFocus","remove","focus","style","removeProperty","hideOverlay","overflow","transform","offsetWidth","offsetHeight","focusableElementSelector","_a5","_i5","setAttribute","_a6","_i6","removeAttribute"],"mappings":"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","file":"offcanvas.js","sourcesContent":["'use strict';\n\nclass OffCanvas {\n\n  constructor (options) {\n    // Apply user configuration\n    this.options = Object.assign({\n      // Debug mode\n      debug: false,\n\n      // Show shading overlay over content wrapper when bar is open?\n      overlay: true,\n\n      // Close open bar with escape key?\n      closeOnEsc: true,\n\n      // Selector to find main wrapper\n      mainWrapSelector: '.offcanvas-main',\n\n      // Selector to find content wrapper\n      contentWrapSelector: '.offcanvas-content',\n    }, options)\n\n    // Overlay element\n    this.overlay = null\n\n    // Currently open bar\n    this.currentOpenBar = null\n\n    // Button which was previously used to open the bar\n    this.previousOpenButton = null\n\n    // Window resize timeout\n    this.resizeTimeout = null\n\n    // Object for storing the bars\n    this.bars = {}\n\n    // Run initializer\n    this.init()\n  }\n\n  // Logging function\n  log (text = '') {\n    console.log('Off-canvas: ' + text)\n  }\n\n  // Error logging function\n  logError (text = '') {\n    console.error('Off-canvas: ' + text)\n  }\n\n  // Debug logging function\n  debug (text = '') {\n    if (!this.options.debug) return\n\n    console.log('Off-canvas debug: ' + text)\n  }\n\n  // Initializer\n  init () {\n    try {\n      // Find and validate required elements\n      this.mainWrap = document.querySelector(this.options.mainWrapSelector)\n      if (!this.mainWrap) throw 'Main wrap element was not found with selector: ' + this.options.mainWrapSelector\n\n      this.contentWrap = this.mainWrap.querySelector(this.options.contentWrapSelector)\n      if (!this.contentWrap) throw 'Content wrap element was not found with selector: ' + this.options.contentWrapSelector\n\n      // Find buttons\n      this.openButtons = this.mainWrap.querySelectorAll('[data-offcanvas-open]')\n      this.closeButtons = this.mainWrap.querySelectorAll('[data-offcanvas-close]')\n      this.toggleButtons = this.mainWrap.querySelectorAll('[data-offcanvas-toggle]')\n\n      // Add classes\n      this.mainWrap.classList.add('offcanvas-main')\n      this.contentWrap.classList.add('offcanvas-content')\n\n      // Find bars\n      this.mainWrap.querySelectorAll('[data-offcanvas-bar]').forEach(bar => {\n        this.addBar(bar)\n      })\n\n      // Check that there's at least one bar defined\n      if (!Object.keys(this.bars).length) throw 'Cannot find any bars.'\n\n      // Add event listeners for open buttons\n      this.openButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-open')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Open button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.open(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.open(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for toggle buttons\n      this.toggleButtons.forEach(button => {\n        let position = button.getAttribute('data-offcanvas-toggle')\n\n        if (!this.isValidPosition(position)) {\n          this.logError('Toggle button has invalid bar position \\'' + position + '\\' defined. Use one of the following values: left, right, top, bottom')\n          return\n        }\n\n        button.addEventListener('click', () => this.toggle(position, button))\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.toggle(position, button)\n          }\n        })\n      })\n\n      // Add event listeners for close buttons\n      this.closeButtons.forEach(button => {\n        button.addEventListener('click', () => this.close())\n        button.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      })\n\n      // Add overlay\n      if (this.options.overlay && !this.overlay) {\n        this.overlay = document.createElement('div')\n        this.overlay.classList.add('offcanvas-overlay')\n        this.overlay.addEventListener('click', () => this.close())\n        this.overlay.addEventListener('keydown', event => {\n          if ([13, 32].indexOf(event.keyCode) >= 0) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n\n        this.contentWrap.appendChild(this.overlay)\n      }\n\n      // Enable closing the bar with escape key\n      if (this.options.closeOnEsc) {\n        window.addEventListener('keydown', event => {\n          if (event.keyCode === 27) {\n            event.preventDefault()\n            this.close()\n          }\n        })\n      }\n\n      // Adjust content wrapper transform when window is resized\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeTimeout)\n\n        this.resizeTimeout = setTimeout(() => {\n          this.setContentWrapPush()\n        }, 200)\n      })\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  isValidPosition (position = null) {\n    return ['left', 'right', 'top', 'bottom'].indexOf(position) >= 0\n  }\n\n  addBar (bar) {\n    try {\n      // Get bar configuration\n      var position = bar.getAttribute('data-offcanvas-bar')\n\n      // Validate required elements\n      if (!this.mainWrap || !this.contentWrap) return this\n\n      // Validate position\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      // Check that bar is not already defined\n      if (this.bars[position]) throw 'Duplicate bar with position \\'' + position + '\\''\n\n      // Create new bar object\n      const newBar = new OffCanvasBar()\n      newBar.element = bar\n      newBar.init()\n\n      // Insert new bar\n      this.bars[position] = newBar\n\n      this.debug('Added bar \\'' + position + '\\' with mode \\'' + newBar.mode + '\\'')\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  open (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      const bar = this.bars[position]\n\n      if (!bar) throw 'Bar with position \\'' + position + '\\' is not defined. Use one of the following: ' + Object.keys(this.bars).join(', ') + '.'\n      if (bar.element.classList.contains('offcanvas-bar--open')) return\n\n      // Close other bars\n      this.close()\n\n      // Open bar\n      this.debug('Opening bar \\'' + position + '\\'')\n      bar.enableFocus()\n      bar.element.classList.add('offcanvas-bar--open')\n\n      // Mark this bar as open\n      this.currentOpenBar = bar\n\n      // Push content wrap if needed\n      this.setContentWrapPush()\n\n      // Remember the button which was used to open off-canvas\n      this.previousOpenButton = button\n\n      // Show overlay\n      this.showOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  toggle (position = null, button = null) {\n    try {\n      if (!this.isValidPosition(position)) throw 'Invalid bar position \\'' + position + '\\'. Use one of the following values: left, right, top, bottom'\n\n      if (this.currentOpenBar && this.currentOpenBar.position == position) {\n        this.close()\n      } else {\n        this.close()\n        this.open(position, button)\n      }\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  close () {\n    try {\n      if (!this.currentOpenBar) return\n\n      // Close bar\n      this.debug('Closing bar \\'' + this.currentOpenBar.position + '\\'')\n      this.currentOpenBar.disableFocus()\n      this.currentOpenBar.element.classList.remove('offcanvas-bar--open')\n      this.currentOpenBar = null\n\n      // Focus open button which was used to open the bar\n      if (this.previousOpenButton) {\n        this.previousOpenButton.focus()\n        this.previousOpenButton = null\n      }\n\n      // Remove transforms from wrapper elements\n      this.contentWrap.style.removeProperty('transform')\n      this.mainWrap.style.removeProperty('overflow')\n\n      // Hide overlay\n      this.hideOverlay()\n    } catch (error) {\n      this.logError(error)\n    }\n\n    return this\n  }\n\n  setContentWrapPush () {\n    if (!this.currentOpenBar) return\n    if (!this.currentOpenBar.mode) return\n\n    this.mainWrap.style.overflow = 'hidden'\n\n    if (['push', 'slide'].indexOf(this.currentOpenBar.mode) >= 0) {\n      switch (this.currentOpenBar.position) {\n        case 'left':\n          this.contentWrap.style.transform = 'translateX(' + this.currentOpenBar.element.offsetWidth + 'px)'\n          break\n\n        case 'right':\n          this.contentWrap.style.transform = 'translateX(-' + this.currentOpenBar.element.offsetWidth + 'px)'\n          break\n\n        case 'top':\n          this.contentWrap.style.transform = 'translateY(' + this.currentOpenBar.element.offsetHeight + 'px)'\n          break\n\n        case 'bottom':\n          this.contentWrap.style.transform = 'translateY(-' + this.currentOpenBar.element.offsetHeight + 'px)'\n          break\n      }\n    }\n  }\n\n  showOverlay () {\n    if (!this.overlay) return\n    if (this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Showing overlay')\n\n    this.overlay.classList.add('offcanvas-overlay--visible')\n  }\n\n  hideOverlay () {\n    if (!this.overlay) return\n    if (!this.overlay.classList.contains('offcanvas-overlay--visible')) return\n\n    this.debug('Hiding overlay')\n\n    this.overlay.classList.remove('offcanvas-overlay--visible')\n  }\n}\n\nclass OffCanvasBar {\n\n  constructor() {\n    this.element = null\n    this.position = null\n    this.mode = 'float'\n    this.focusableElementSelector = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n  }\n\n  init () {\n    // Check that defined bar element exists\n    if (!this.element) throw 'Bar element for \\'' + this.position + '\\' was not found!'\n\n    // Set position\n    this.position = this.element.getAttribute('data-offcanvas-bar')\n    if (!this.position) throw 'Missing position for bar'\n\n    // Set mode\n    if (this.element.getAttribute('data-offcanvas-bar-mode')) {\n      this.mode = this.element.getAttribute('data-offcanvas-bar-mode')\n    }\n\n    // Validate mode\n    if (['float', 'push', 'slide'].indexOf(this.mode) < 0) throw 'Invalid mode \\'' + this.mode + '\\' for bar \\'' + this.position + '\\'. Use one of the following values: float, push, slide.'\n\n    // Disable focus\n    this.disableFocus()\n\n    return this\n  }\n\n  disableFocus () {\n    // Disable focus on bar child elements\n    this.element.querySelectorAll(this.focusableElementSelector).forEach(item => {\n      item.setAttribute('tabindex', '-1')\n    })\n\n    // Disable focus on bar\n    this.element.setAttribute('tabindex', '-1')\n    this.element.setAttribute('aria-hidden', 'true')\n\n    return this\n  }\n\n  enableFocus () {\n    // Enable focus on bar child elements\n    this.element.querySelectorAll(this.focusableElementSelector).forEach(item => {\n      item.removeAttribute('tabindex')\n    })\n\n    // Enable focus on bar\n    this.element.removeAttribute('aria-hidden')\n    this.element.setAttribute('tabindex', '0')\n\n    // Focus on bar\n    this.element.focus()\n\n    return this\n  }\n\n}"]}